/*
 * devicedbg.h : contains the following definitions
 *	struct reg_info	:	stats the register representation in the program
 *	read_processor():	reads the "/proc/cpuinfo" to identify the processor
 *	show_registers():	reads the register contents for the given "struct reg_info"
 *				via opening the "/dev/mem" file and mmapping the file to the process
 *	Macros:
 *		FATAL	:	prints the line number & file name along with error string
 *				used in case of error
 *		ARRAY_SIZE:	calculates the struct reg_info array size
 */

#ifndef _DEVICEDBG_H_
#define _DEVICEDBG_H_

/* representation of a register */
struct reg_info {
	unsigned long offset;
	unsigned long old_value;
	unsigned long new_value;
//	char name[25];
	const char *name;
};

#define FATAL do { fprintf(stderr, "Error at line %d, file %s (%d) [%s]\n", \
  __LINE__, __FILE__, errno, strerror(errno)); exit(1); } while(0)
 
#define ARRAY_SIZE(type,object) \
	sizeof(object) / sizeof(type)

/* Number of bytes to be mapped in a call to show_register() function*/
#define MAP_SIZE 4096UL
#define MAP_MASK (MAP_SIZE - 1)
#define CPUINFO_FILE "/proc/cpuinfo"

/* Register section values */
#define DCAN               0
#define GPIO   		   1
#define I2C   		   2
#define LCD_CONTROLLER     3
#define MCASP		   4
#define MCBSP		   4
#define MCSPI     	   5
#define MMCSD  		   6
#define RTC    		   7
#define TIMER  		   8
#define TSC  		   9
#define UART 		   10
#define USB   		   11
#define WDT   		   12
#define PRODUCT_ID     	   13
#define LCD	           14

/* [0]DCAN,[1]GPIO,[2]I2C,[3]LCD_CONTROLLER,[4]MCASP,[5]MCSPI,[6]MMCSD,[7]RTC*,[8]TIMER,[8]TSC*,[10]UART,[11]USB*,[12]WDT,[13]PRODUCT_ID,[14]LCD; * are not implemented yet for OMAP4430.
*/


/* Processor types */
#define OMAP4		0
#define AM335x		1
#define OMAP35x		2

/* Processor identification register values */
#define OMAP4430_HAWKEYE_NUM1 0xB85202F0
#define OMAP4430_HAWKEYE_NUM2 0xB95C02F0

#define OMAP4460_RAMP_SYSTEM  0xB94E02F0
#define OMAP4470_RAMP_SYSTEM  0xB97502F0

#define OMAP3530_CHIP_ID  0x0C00
#define OMAP3525_CHIP_ID  0x4C00
#define OMAP3515_CHIP_ID  0x1C00
#define OMAP3503_CHIP_ID  0x5C00

#define AM3352_DEVICE_ID  0x00FF0382
#define AM3354_DEVICE_ID  0x20FF0382
#define AM3356_DEVICE_ID  0x00FF0383
#define AM3357_DEVICE_ID  0x00FE0383
#define AM3358_DEVICE_ID  0x20FF0383
#define AM3359_DEVICE_ID  0x20FE0383


/* if compilation includes the OMAP4 flag */
#ifdef _OMAP4_

/* ---------------------Registers OMAP 4430-------------------------- */
// base 0x4A002000
// product id
static struct reg_info omap44x_product_id_registers[] = {
	{ 0x200, 0x0, 0x0, "STD_FUSE_DIE_ID_0" },
	{ 0x204, 0x0, 0x0, "ID_CODE" },
	{ 0x208, 0x0, 0x0, "STD_FUSE_DIE_ID_1" },
	{ 0x20C, 0x0, 0x0, "STD_FUSE_DIE_ID_2" },
	{ 0x210, 0x0, 0x0, "STD_FUSE_DIE_ID_3" },
	{ 0x214, 0x0, 0x0, "STD_FUSE_PROD_ID_0" },
	{ 0x218, 0x0, 0x0, "STD_FUSE_PROD_ID_1" },
};

// base 0x48040000
// lcd
static struct reg_info omap44x_lcd_registers[] = {
	{ 0x00, 0x0, 0x0, "DSS_REVISION" },
	{ 0x10, 0x0, 0x0, "RESERVED" },
	{ 0x14, 0x0, 0x0, "DSS_SYSSTATUS" },
	{ 0x40, 0x0, 0x0, "DSS_CTRL" },
	{ 0x5c, 0x0, 0x0, "DSS_STATUS" }
};

// base 0x48041000
// lcd controller
static struct reg_info omap44x_lcd_controller_registers[] = {
	{ 0x000, 0x0, 0x0, "DISPC_REVISION" },
	{ 0x010, 0x0, 0x0, "DISPC_SYSCONFIG" },
	{ 0x014, 0x0, 0x0, "DISPC_SYSSTATUS" },
	{ 0x018, 0x0, 0x0, "DISPC_IRQSTATUS" },
	{ 0x01C, 0x0, 0x0, "DISPC_IRQENABLE" },
	{ 0x040, 0x0, 0x0, "DISPC_CONTROL1" },
	{ 0x044, 0x0, 0x0, "DISPC_CONFIG1" },
	{ 0x048, 0x0, 0x0, "RESERVED" },
	{ 0x04C, 0x0, 0x0, "DISPC_DEFAULT_COLOR0" },
	{ 0x050, 0x0, 0x0, "DISPC_DEFAULT_COLOR1" },
	{ 0x054, 0x0, 0x0, "DISPC_TRANS_COLOR0" },
	{ 0x058, 0x0, 0x0, "DISPC_TRANS_COLOR1" },
	{ 0x05C, 0x0, 0x0, "DISPC_LINE_STATUS" },
	{ 0x060, 0x0, 0x0, "DISPC_LINE_NUMBER" },
	{ 0x064, 0x0, 0x0, "DISPC_TIMING_H1" },
	{ 0x068, 0x0, 0x0, "DISPC_TIMING_V1" },
	{ 0x06C, 0x0, 0x0, "DISPC_POL_FREQ1" },
	{ 0x070, 0x0, 0x0, "DISPC_DIVISOR1" },
	{ 0x074, 0x0, 0x0, "DISPC_GLOBAL_ALPHA" },
	{ 0x078, 0x0, 0x0, "DISPC_SIZE_TV" },
	{ 0x07C, 0x0, 0x0, "DISPC_SIZE_LCD1" },
	{ 0x088, 0x0, 0x0, "DISPC_GFX_POSITION" },
	{ 0x08C, 0x0, 0x0, "DISPC_GFX_SIZE" },
	{ 0x0A0, 0x0, 0x0, "DISPC_GFX_ATTRIBUTES" },
	{ 0x0A4, 0x0, 0x0, "DISPC_GFX_BUF_THRESHOLD" },
	{ 0x0A8, 0x0, 0x0, "DISPC_GFX_BUF_SIZE_STATUS" },
	{ 0x0AC, 0x0, 0x0, "DISPC_GFX_ROW_INC" },
	{ 0x0B0, 0x0, 0x0, "DISPC_GFX_PIXEL_INC" },
	{ 0x0B4, 0x0, 0x0, "RESERVED" },
	{ 0x0B8, 0x0, 0x0, "DISPC_GFX_TABLE_BA" }
};

/* bases
* i2c3 0x48060000
* i2c1 0x48070000
* i2c2 0x48072000
* i2c4 0x48350000
*/
static struct reg_info omap44x_i2c_registers[] = {
	{ 0x00, 0x0, 0x0, "I2C_REVNB_LO" },
	{ 0x04, 0x0, 0x0, "I2C_REVNB_HI" },
	{ 0x10, 0x0, 0x0, "I2C_SYS" },
	{ 0x20, 0x0, 0x0, "RESERVED" },
	{ 0x24, 0x0, 0x0, "I2C_IRQSTATUS_RAW" },
	{ 0x28, 0x0, 0x0, "I2C_IRQSTATUS" },
	{ 0x2C, 0x0, 0x0, "I2C_RQENABLE_SET" },
	{ 0x30, 0x0, 0x0, "I2C_IRQENABLE_CLR" },
	{ 0x34, 0x0, 0x0, "I2C_WE" },
	{ 0x38, 0x0, 0x0, "I2C_DMARXENABLE_SET" },
	{ 0x3C, 0x0, 0x0, "I2C_DMATXENABLE_SET" },
	{ 0x40, 0x0, 0x0, "I2C_DMARXENABLE_CLR" },
	{ 0x44, 0x0, 0x0, "I2C_DMATXENABLE_CLR" },
	{ 0x48, 0x0, 0x0, "I2C_DMARXWAKE_EN" },
	{ 0x4C, 0x0, 0x0, "I2C_DMATXWAKE_EN" },
	{ 0x84, 0x0, 0x0, "I2C_IE" },
	{ 0x88, 0x0, 0x0, "I2C_STAT" },
	{ 0x90, 0x0, 0x0, "I2C_SYSS" },
	{ 0x94, 0x0, 0x0, "I2C_BUF" },
	{ 0x98, 0x0, 0x0, "I2C_CNT" },
	{ 0x9C, 0x0, 0x0, "I2C_DATA" },
	{ 0xA4, 0x0, 0x0, "I2C_CON" },
	{ 0xA8, 0x0, 0x0, "I2C_OA" },
	{ 0xAC, 0x0, 0x0, "I2C_SA" },
	{ 0xB0, 0x0, 0x0, "I2C_PSC" },
	{ 0xB4, 0x0, 0x0, "I2C_SCLL" },
	{ 0xB8, 0x0, 0x0, "I2C_SCLH" },
	{ 0xBC, 0x0, 0x0, "I2C_SYSTEST" },
	{ 0xC0, 0x0, 0x0, "I2C_BUFSTAT" },
	{ 0xC4, 0x0, 0x0, "I2C_OA1" },
	{ 0xC8, 0x0, 0x0, "I2C_OA2" },
	{ 0xCC, 0x0, 0x0, "I2C_OA3" },
	{ 0xD0, 0x0, 0x0, "I2C_ACTOA" },
	{ 0xD4, 0x0, 0x0, "I2C_SBLOCK" }
};

/* bases
* uart1 0x4806A000
* uart2 0x4806C000
* uart3 0x48020000
* uart4 0x4806E000
*/
static struct reg_info omap44x_uart_registers[] = {
	{ 0x00, 0x0, 0x0, "UART_DLL" },
	{ 0x04, 0x0, 0x0, "UART_DLH" },
	{ 0x08, 0x0, 0x0, "UART_EFR" },
	{ 0x0C, 0x0, 0x0, "UART_LCR" },
	{ 0x10, 0x0, 0x0, "UART_XON1_ADDR1" },
	{ 0x14, 0x0, 0x0, "UART_XON2_ADDR2" },
	{ 0x18, 0x0, 0x0, "UART_XOFF1" },
	{ 0x1C, 0x0, 0x0, "UART_XOFF2" },
	{ 0x20, 0x0, 0x0, "UART_MDR1" },
	{ 0x24, 0x0, 0x0, "UART_MDR2" },
	{ 0x28, 0x0, 0x0, "UART_SFLSR" },
	{ 0x2C, 0x0, 0x0, "UART_RESUME" },
	{ 0x30, 0x0, 0x0, "UART_SFREGL" },
	{ 0x34, 0x0, 0x0, "UART_SFREGH" },
	{ 0x38, 0x0, 0x0, "UART_BLR" },
	{ 0x3C, 0x0, 0x0, "UART_ACREG" },
	{ 0x40, 0x0, 0x0, "UART_SCR" },
	{ 0x44, 0x0, 0x0, "UART_SSR" },
	{ 0x48, 0x0, 0x0, "UART_EBLR" },
	{ 0x50, 0x0, 0x0, "UART_MVR" },
	{ 0x54, 0x0, 0x0, "UART_SYSC" },
	{ 0x58, 0x0, 0x0, "UART_SYSS" },
	{ 0x5C, 0x0, 0x0, "UART_WER" },
	{ 0x60, 0x0, 0x0, "UART_CFPS" },
	{ 0x64, 0x0, 0x0, "UART_RXFIFO_LVL" },
	{ 0x68, 0x0, 0x0, "UART_TXFIFO_LVL" },
	{ 0x6C, 0x0, 0x0, "UART_IER2" },
	{ 0x70, 0x0, 0x0, "UART_ISR2" },
	{ 0x74, 0x0, 0x0, "UART_FREQ_SEL" },
	{ 0x80, 0x0, 0x0, "UART_MDR3" },
	{ 0x84, 0x0, 0x0, "UART_TX_DMA_THRESHOLD" }
};

/* bases
* MMCHS1	0x4809C000
* MMCHS2	0x480B4000
* MMCHS3	0x480AD000
* MMCHS4	0x480D1000
* MMCHS5	0x480D5000
*/
static struct reg_info omap44x_mmchs_registers[] = {
	{ 0x000, 0x0, 0x0, "MMCHS_HL_REV" },
	{ 0x004, 0x0, 0x0, "MMCHS_HL_HWINFO" },
	{ 0x010, 0x0, 0x0, "MMCHS_HL_SYSCONFIG" },
	{ 0x110, 0x0, 0x0, "MMCHS_SYSCONFIG" },
	{ 0x114, 0x0, 0x0, "MMCHS_SYSSTATUS" },
	{ 0x124, 0x0, 0x0, "MMCHS_CSRE" },
	{ 0x128, 0x0, 0x0, "MMCHS_SYSTEST" },
	{ 0x12C, 0x0, 0x0, "MMCHS_CON" },
	{ 0x130, 0x0, 0x0, "MMCHS_PWCNT" },
	{ 0x200, 0x0, 0x0, "RESERVED" },
	{ 0x204, 0x0, 0x0, "MMCHS_BLK" },
	{ 0x208, 0x0, 0x0, "MMCHS_ARG" },
	{ 0x20C, 0x0, 0x0, "MMCHS_CMD" },
	{ 0x210, 0x0, 0x0, "MMCHS_RSP10" },
	{ 0x214, 0x0, 0x0, "MMCHS_RSP32" },
	{ 0x218, 0x0, 0x0, "MMCHS_RSP54" },
	{ 0x21C, 0x0, 0x0, "MMCHS_RSP76" },
	{ 0x220, 0x0, 0x0, "MMCHS_DATA" },
	{ 0x224, 0x0, 0x0, "MMCHS_PSTATE" },
	{ 0x228, 0x0, 0x0, "MMCHS_HCTL" },
	{ 0x22C, 0x0, 0x0, "MMCHS_SYSCTL" },
	{ 0x230, 0x0, 0x0, "MMCHS_STAT" },
	{ 0x234, 0x0, 0x0, "MMCHS_IE" },
	{ 0x238, 0x0, 0x0, "MMCHS_ISE" },
	{ 0x23C, 0x0, 0x0, "MMCHS_AC12" },
	{ 0x240, 0x0, 0x0, "MMCHS_CAPA" },
	{ 0x248, 0x0, 0x0, "MMCHS_CUR_CAPA" },
	{ 0x250, 0x0, 0x0, "MMCHS_FE" },
	{ 0x254, 0x0, 0x0, "MMCHS_ADMAES" },
	{ 0x258, 0x0, 0x0, "MMCHS_ADMASAL" },
	{ 0x25C, 0x0, 0x0, "RESERVED" },
	{ 0x2FC, 0x0, 0x0, "MMCHS_REV" }
};

/* bases
* MCSPI1	0x48098000
* MCSPI2	0x4809A000
* MCSPI3	0x480B8000
* MCSPI4	0x480BA000
*/
static struct reg_info omap44x_mcspi_registers[] = {
	{ 0x000, 0x0, 0x0, "MCSPI_HL_REV" },
	{ 0x004, 0x0, 0x0, "MCSPI_HL_HWINFO" },
	{ 0x010, 0x0, 0x0, "MCSPI_HL_SYSCONFIG" },
	{ 0x100, 0x0, 0x0, "MCSPI_REVISION" },
	{ 0x110, 0x0, 0x0, "MCSPI_SYSCONFIG" },
	{ 0x114, 0x0, 0x0, "MCSPI_SYSSTATUS" },
	{ 0x118, 0x0, 0x0, "MCSPI_IRQSTATUS" },
	{ 0x11C, 0x0, 0x0, "MCSPI_IRQENABLE" },
	{ 0x120, 0x0, 0x0, "MCSPI_WAKEUPENABLE" },
	{ 0x124, 0x0, 0x0, "MCSPI_SYST" },
	{ 0x128, 0x0, 0x0, "MCSPI_MODULCTRL" },
	{ 0x12C, 0x0, 0x0, "MCSPI_CH0CONF" },
	{ 0x130, 0x0, 0x0, "MCSPI_CH0STAT" },
	{ 0x134, 0x0, 0x0, "MCSPI_CH0CTRL" },
	{ 0x138, 0x0, 0x0, "MCSPI_TX0" },
	{ 0x13C, 0x0, 0x0, "MCSPI_RX0" },
	{ 0x17C, 0x0, 0x0, "MCSPI_XFERLEVEL" }
};

// USB_HOST_HS INSTANCE 
/* bases
* USBTLLHS_CONFIG	0x4A062000
* USBTLLHS_ULPI		0x4A062800
* HSUSBHOST		0x4A064000
* OHCI			0x4A064800
* EHCI			0x4A064C00
*/
/*static struct reg_info omap44x_usbttlhs_config_registers[] = {
	{ 0x000, 0x0, 0x0, "USBTTL_REVISION" },
	{ 0x004, 0x0, 0x0, "USBTTL_HWINFO" },
	{ 0x010, 0x0, 0x0, "USBTTL_SYSCONFIG" },
	{ 0x014, 0x0, 0x0, "USBTTL_SYSSTATUS" },
	{ 0x018, 0x0, 0x0, "USBTTL_IRQSTATUS" },
	{ 0x11C, 0x0, 0x0, "USBTTL_IRQENABLE" },
	{ 0x030, 0x0, 0x0, "TTL_SHARED_CONF" },
	{ 0x040, 0x0, 0x0, "TTL_CHANNEL_CONF_0" },
	{ 0x044, 0x0, 0x0, "TTL_CHANNEL_CONF_1" },
	{ 0x400, 0x0, 0x0, "USBTLL_SAR_CNTX_0" },
	{ 0x404, 0x0, 0x0, "USBTLL_SAR_CNTX_1" },
	{ 0x408, 0x0, 0x0, "USBTLL_SAR_CNTX_2" },
	{ 0x40C, 0x0, 0x0, "USBTLL_SAR_CNTX_3" },
	{ 0x410, 0x0, 0x0, "USBTLL_SAR_CNTX_4" },
	{ 0x414, 0x0, 0x0, "USBTLL_SAR_CNTX_5" },
	{ 0x418, 0x0, 0x0, "USBTLL_SAR_CNTX_6" }
}; */

/*static struct reg_info omap44x_usbttlhs_ulpi_registers[] = {
	{ 0x000, 0x0, 0x0, "VENDOR_ID_LO_0" },
	{ 0x100, 0x0, 0x0, "VENDOR_ID_LO_1" },
	{ 0x001, 0x0, 0x0, "VENDOR_ID_HI_0" },
	{ 0x101, 0x0, 0x0, "VENDOR_ID_HI_1" },
	{ 0x002, 0x0, 0x0, "PRODUCT_ID_LO_0" },
	{ 0x102, 0x0, 0x0, "PRODUCT_ID_LO_1" },
	{ 0x003, 0x0, 0x0, "PRODUCT_ID_HI_0" },
	{ 0x103, 0x0, 0x0, "PRODUCT_ID_HI_1" },
	{ 0x004, 0x0, 0x0, "FUNCTION_CTRL_0" },
	{ 0x104, 0x0, 0x0, "FUNCTION_CTRL_1" },
	{ 0x005, 0x0, 0x0, "FUNCTION_CTRL_SET_0" },
	{ 0x105, 0x0, 0x0, "FUNCTION_CTRL_SET_1" },
	{ 0x006, 0x0, 0x0, "FUNCTION_CTRL_CLR_0" },
	{ 0x106, 0x0, 0x0, "FUNCTION_CTRL_CLR_1" },
	{ 0x007, 0x0, 0x0, "INTERFACE_CTRL_0" },
	{ 0x107, 0x0, 0x0, "INTERFACE_CTRL_1" },
	{ 0x008, 0x0, 0x0, "INTERFACE_CTRL_SET_0" },
	{ 0x108, 0x0, 0x0, "INTERFACE_CTRL_SET_1" },
	{ 0x009, 0x0, 0x0, "INTERFACE_CTRL_CLR_0" },
	{ 0x109, 0x0, 0x0, "INTERFACE_CTRL_CLR_1" },
	{ 0x00A, 0x0, 0x0, "OTG_CTRL_0" },
	{ 0x10A, 0x0, 0x0, "OTG_CTRL_1" },
	{ 0x00B, 0x0, 0x0, "OTG_CTRL_SET_0" },
	{ 0x10B, 0x0, 0x0, "OTG_CTRL_SET_1" },
	{ 0x00C, 0x0, 0x0, "OTG_CTRL_CLR_0" },
	{ 0x10C, 0x0, 0x0, "OTG_CTRL_CLR_1" },
	{ 0x00D, 0x0, 0x0, "USB_INT_EN_RISE_0" },
	{ 0x10D, 0x0, 0x0, "USB_INT_EN_RISE_1" },
	{ 0x00E, 0x0, 0x0, "USB_INT_EN_RISE_SET_0" },
	{ 0x10E, 0x0, 0x0, "USB_INT_EN_RISE_SET_1" },
	{ 0x00F, 0x0, 0x0, "USB_INT_EN_RISE_CLR_0" },
	{ 0x10F, 0x0, 0x0, "USB_INT_EN_RISE_CLR_1" },
	{ 0x010, 0x0, 0x0, "USB_INT_EN_FALL_0" },
	{ 0x110, 0x0, 0x0, "USB_INT_EN_FALL_1" },
	{ 0x011, 0x0, 0x0, "USB_INT_EN_FALL_SET_0" },
	{ 0x111, 0x0, 0x0, "USB_INT_EN_FALL_SET_1" },
	{ 0x012, 0x0, 0x0, "USB_INT_EN_FALL_CLR_0" },
	{ 0x112, 0x0, 0x0, "USB_INT_EN_FALL_CLR_1" },
	{ 0x013, 0x0, 0x0, "USB_INT_STATUS_0" },
	{ 0x113, 0x0, 0x0, "USB_INT_STATUS_1" },
	{ 0x014, 0x0, 0x0, "USB_INT_LATCH_0" },
	{ 0x114, 0x0, 0x0, "USB_INT_LATCH_1" },
	{ 0x015, 0x0, 0x0, "DEBUG_0" },
	{ 0x115, 0x0, 0x0, "DEBUG_1" },
	{ 0x016, 0x0, 0x0, "SCRATCH_REGISTER_0" },
	{ 0x116, 0x0, 0x0, "SCRATCH_REGISTER_1" },
	{ 0x017, 0x0, 0x0, "SCRATCH_REGISTER_SET_0" },
	{ 0x117, 0x0, 0x0, "SCRATCH_REGISTER_SET_1" },
	{ 0x018, 0x0, 0x0, "SCRATCH_REGISTER_CLR_0" },
	{ 0x118, 0x0, 0x0, "SCRATCH_REGISTER_CLR_1" },
	{ 0x02F, 0x0, 0x0, "EXTENDED_SET_ACCESS_0" },
	{ 0x12F, 0x0, 0x0, "EXTENDED_SET_ACCESS_1" },
	{ 0x030, 0x0, 0x0, "UTMI_VCONTROL_EN_RISE_0" },
	{ 0x130, 0x0, 0x0, "UTMI_VCONTROL_EN_RISE_1" },
	{ 0x031, 0x0, 0x0, "UTMI_VCONTROL_EN_RISE_SET_0" },
	{ 0x131, 0x0, 0x0, "UTMI_VCONTROL_EN_RISE_SET_1" },
	{ 0x032, 0x0, 0x0, "UTMI_VCONTROL_EN_RISE_CLR_0" },
	{ 0x132, 0x0, 0x0, "UTMI_VCONTROL_EN_RISE_CLR_1" },
	{ 0x033, 0x0, 0x0, "UTMI_VCONTROL_STATUS_0" },
	{ 0x133, 0x0, 0x0, "UTMI_VCONTROL_STATUS_1" },
	{ 0x034, 0x0, 0x0, "UTMI_VCONTROL_LATCH_0" },
	{ 0x134, 0x0, 0x0, "UTMI_VCONTROL_LATCH_1" },
	{ 0x035, 0x0, 0x0, "UTMI_VSTATUS_0" },
	{ 0x135, 0x0, 0x0, "UTMI_VSTATUS_1" },
	{ 0x036, 0x0, 0x0, "UTMI_VSTATUS_SET_0" },
	{ 0x136, 0x0, 0x0, "UTMI_VSTATUS_SET_1" },
	{ 0x037, 0x0, 0x0, "UTMI_VSTATUS_CLR_0" },
	{ 0x137, 0x0, 0x0, "UTMI_VSTATUS_CLR_1" },
	{ 0x038, 0x0, 0x0, "USB_INT_LATCH_NOCLR_0" },
	{ 0x138, 0x0, 0x0, "USB_INT_LATCH_NOCLR_1" },
	{ 0x030, 0x0, 0x0, "VENDOR_INT_EN_0" },
	{ 0x130, 0x0, 0x0, "VENDOR_INT_EN_1" },
	{ 0x031, 0x0, 0x0, "VENDOR_INT_EN_SET_0" },
	{ 0x131, 0x0, 0x0, "VENDOR_INT_EN_SET_1" },
	{ 0x032, 0x0, 0x0, "VENDOR_INT_EN_CLR_0" },
	{ 0x132, 0x0, 0x0, "VENDOR_INT_EN_CLR_1" },
	{ 0x033, 0x0, 0x0, "VENDOR_INT_STATUS_0" },
	{ 0x133, 0x0, 0x0, "VENDOR_INT_STATUS_1" },
	{ 0x034, 0x0, 0x0, "VENDOR_INT_LATCH_0" },
	{ 0x134, 0x0, 0x0, "VENDOR_INT_LATCH_1" },
};*/


// base 0x49028000
// McASP
static struct reg_info omap44x_mcasp_registers[] = {
	{ 0x000, 0x0, 0x0, "MCASP_PID" },
	{ 0x004, 0x0, 0x0, "MCASP_SYSCONFIG" },
	{ 0x010, 0x0, 0x0, "MCASP_PFUNC" },
	{ 0x014, 0x0, 0x0, "MCASP_PDIR" },
	{ 0x018, 0x0, 0x0, "MCASP_PDOUT" },
	{ 0x01C, 0x0, 0x0, "MCASP_PDIN" },
	{ 0x020, 0x0, 0x0, "MCASP_PDCLR" },
	{ 0x044, 0x0, 0x0, "MCASP_GBLCTL" },
	{ 0x048, 0x0, 0x0, "MCASP_AMUTE" },
	{ 0x050, 0x0, 0x0, "MCASP_TXDITCTL" },
	{ 0x0A4, 0x0, 0x0, "MCASP_TXMASK" },
	{ 0x0A8, 0x0, 0x0, "MCASP_TXFMT" },
	{ 0x0AC, 0x0, 0x0, "MCASP_TXFMCTL" },
	{ 0x0B0, 0x0, 0x0, "MCASP_ACLKXCTL" },
	{ 0x0B4, 0x0, 0x0, "MCASP_AHCLKXCTL" },
	{ 0x0B8, 0x0, 0x0, "MCASP_TXTDM" },
	{ 0x0BC, 0x0, 0x0, "MCASP_EVTCTLX" },
	{ 0x0C0, 0x0, 0x0, "MCASP_TXSTAT" },
	{ 0x0C4, 0x0, 0x0, "MCASP_TXTDMSLOT" },
	{ 0x0C8, 0x0, 0x0, "MCASP_TXCLKCHK" },
	{ 0x0CC, 0x0, 0x0, "MCASP_TXEVTCTL" },
	{ 0x100, 0x0, 0x0, "MCASP_DITCSRA0" },
	{ 0x104, 0x0, 0x0, "MCASP_DITCSRA1" },
	{ 0x108, 0x0, 0x0, "MCASP_DITCSRA2" },
	{ 0x10C, 0x0, 0x0, "MCASP_DITCSRA3" },
	{ 0x110, 0x0, 0x0, "MCASP_DITCSRA4" },
	{ 0x114, 0x0, 0x0, "MCASP_DITCSRA5" },
	{ 0x118, 0x0, 0x0, "MCASP_DITCSRB0" },
	{ 0x11C, 0x0, 0x0, "MCASP_DITCSRB1" },
	{ 0x120, 0x0, 0x0, "MCASP_DITCSRB2" },
	{ 0x124, 0x0, 0x0, "MCASP_DITCSRB3" },
	{ 0x128, 0x0, 0x0, "MCASP_DITCSRB4" },
	{ 0x12C, 0x0, 0x0, "MCASP_DITCSRB5" },
	{ 0x130, 0x0, 0x0, "MCASP_DITUDRA0" },
	{ 0x134, 0x0, 0x0, "MCASP_DITUDRA1" },
	{ 0x138, 0x0, 0x0, "MCASP_DITUDRA2" },
	{ 0x13C, 0x0, 0x0, "MCASP_DITUDRA3" },
	{ 0x140, 0x0, 0x0, "MCASP_DITUDRA4" },
	{ 0x144, 0x0, 0x0, "MCASP_DITUDRA5" },
	{ 0x148, 0x0, 0x0, "MCASP_DITUDRB0" },
	{ 0x14C, 0x0, 0x0, "MCASP_DITUDRB1" },
	{ 0x150, 0x0, 0x0, "MCASP_DITUDRB2" },
	{ 0x154, 0x0, 0x0, "MCASP_DITUDRB3" },
	{ 0x158, 0x0, 0x0, "MCASP_DITUDRB4" },
	{ 0x15C, 0x0, 0x0, "MCASP_DITUDRB5" },
	{ 0x180, 0x0, 0x0, "MCASP_XRSRCTL0" },
	{ 0x200, 0x0, 0x0, "MCASP_TXBUF0" }
};

/*bases
WDT2   0x4A314000
WDT3   0x49030000
*/
static struct reg_info omap44x_wdt_registers[] = {
	{ 0x000, 0x0, 0x0, "WDT_WIDR" },
	{ 0x010, 0x0, 0x0, "WDT_WDSC" },
	{ 0x014, 0x0, 0x0, "WDT_WDST" },
	{ 0x018, 0x0, 0x0, "WDT_WISR" },
	{ 0x01C, 0x0, 0x0, "WDT_WIER" },
	{ 0x020, 0x0, 0x0, "WDT_WWER" },
	{ 0x024, 0x0, 0x0, "WDT_WCLR" },
	{ 0x028, 0x0, 0x0, "WDT_WCRR" },
	{ 0x02C, 0x0, 0x0, "WDT_WLDR" },
	{ 0x030, 0x0, 0x0, "WDT_WTGR" },
	{ 0x034, 0x0, 0x0, "WDT_WWPS" },
	{ 0x044, 0x0, 0x0, "WDT_WDLY" },
	{ 0x048, 0x0, 0x0, "WDT_WSPR" },
	{ 0x054, 0x0, 0x0, "WDT_WIRQSTATRAW" },
	{ 0x058, 0x0, 0x0, "WDT_WIRQSTAT" },
	{ 0x05C, 0x0, 0x0, "WDT_WIRQENSET" },
	{ 0x060, 0x0, 0x0, "WDT_WIRQENCLR" },
	{ 0x064, 0x0, 0x0, "WDT_WIRQWAKEEN" }
};

/*General Purpose Timers(GPT) bases
GPTIMER1   0x4A318000
GPTIMER2   0x48032000
GPTIMER3   0x48034000
GPTIMER4   0x48036000
GPTIMER5   0x49038000
GPTIMER6   0x4903A000
GPTIMER7   0x4903C000
GPTIMER8   0x4903E000
GPTIMER9   0x4803E000
GPTIMER10  0x48086000
GPTIMER11  0x48088000
*/
static struct reg_info omap44x_gpt_registers[] = {
	{ 0x000, 0x0, 0x0, "GPT_TIDR" },
	{ 0x010, 0x0, 0x0, "GPT_1MS_TIOCP_CFG" },
	{ 0x014, 0x0, 0x0, "GPT_TISTAT" },
	{ 0x018, 0x0, 0x0, "GPT_TISR" },
	{ 0x01C, 0x0, 0x0, "GPT_TIER" },
	{ 0x020, 0x0, 0x0, "GPT_TWER" },
	{ 0x024, 0x0, 0x0, "GPT_TCLR" },
	{ 0x028, 0x0, 0x0, "GPT_TCRR" },
	{ 0x02C, 0x0, 0x0, "GPT_TLDR" },
	{ 0x030, 0x0, 0x0, "GPT_TTGR" },
	{ 0x034, 0x0, 0x0, "GPT_TWPS" },
	{ 0x038, 0x0, 0x0, "GPT_TMAR" },
	{ 0x03C, 0x0, 0x0, "GPT_TCAR1" },
	{ 0x040, 0x0, 0x0, "GPT_TSICR" },
	{ 0x044, 0x0, 0x0, "GPT_TCAR2" },
	{ 0x048, 0x0, 0x0, "GPT_TPIR" },
	{ 0x04C, 0x0, 0x0, "GPT_TNIR" },
	{ 0x050, 0x0, 0x0, "GPT_TCVR" },
	{ 0x054, 0x0, 0x0, "GPT_TCVR" },
	{ 0x058, 0x0, 0x0, "GPT_TCVR" }
};

#endif		// _OMAP4_


#ifdef _AM335x_
/* --------------------- Registers AM335x -------------------------- */

/*base addresses 
DCAN0 0x481CC000
DCAN1 0X481D0000
*/
static struct reg_info am335x_dcan_registers[] = {
	{ 0x000 , 0x0 , 0x0 , "DCAN_CTL" },
	{ 0x004 , 0x0 , 0x0 , "DCAN_ES" },
	{ 0x008 , 0x0 , 0x0 , "DCAN_ERRC" },
     	{ 0x00C , 0x0 , 0x0 , "DCAN_BTR" },
	{ 0x010 , 0x0 , 0x0 , "DCAN_INT" } ,
	{ 0x014 , 0x0 , 0x0 , "DCAN_TEST" },
	{ 0x01C , 0x0 , 0x0 , "DCAN_PERR" },
	{ 0x080 , 0x0 , 0x0 , "DCAN_ABOTR" },
	{ 0x084 , 0x0 , 0x0 , "DCAN_TXRQ X" },
	{ 0x088 , 0x0 , 0x0 , "DCAN_TXRQ12" },       		
	{ 0x08C , 0x0 , 0x0 , "DCAN_TXRQ34" },
	{ 0x090 , 0x0 , 0x0 , "DCAN_TXRQ56" },
	{ 0x094 , 0x0 , 0x0 , "DCAN_TXRQ78" },
	{ 0x098 , 0x0 , 0x0 , "DCAN_NWDAT X" },
 	{ 0x09C , 0x0 , 0x0 , "DCAN_NWDAT12" },
 	{ 0x0A0 , 0x0 , 0x0 , "DCAN_NWDAT34" },
 	{ 0x0A4 , 0x0 , 0x0 , "DCAN_NWDAT56" },
	{ 0x0A8 , 0x0 , 0x0 , "DCAN_NWDAT78" },
 	{ 0x0AC , 0x0 , 0x0 , "DCAN_INTPND X" },
 	{ 0x0B0 , 0x0 , 0x0 , "DCAN_INTPND12" },
	{ 0x0B4 , 0x0 , 0x0 , "DCAN_INTPND34" },
 	{ 0x0B8 , 0x0 , 0x0 , "DCAN_INTPND56" },
	{ 0x0BC , 0x0 , 0x0 , "DCAN_INTPND78" },
	{ 0x0C0 , 0x0 , 0x0 , "DCAN_MSGVAL X" },
	{ 0x0C4 , 0x0 , 0x0 , "DCAN_MSGVAL12" },
	{ 0x0C8 , 0x0 , 0x0 , "DCAN_MSGVAL34" },	
	{ 0x0CC , 0x0 , 0x0 , "DCAN_MSGVAL56" },
	{ 0x0D0 , 0x0 , 0x0 , "DCAN_MSGVAL78" },
	{ 0x0D8 , 0x0 , 0x0 , "DCAN_INTMUX12" },
	{ 0x0DC , 0x0 , 0x0 , "DCAN_INTMUX34" },
	{ 0x0E0 , 0x0 , 0x0 , "DCAN_INTMUX56" },
	{ 0x0E4 , 0x0 , 0x0 , "DCAN_INTMUX78" },
	{ 0x100 , 0x0 , 0x0 , "DCAN_IF1CMD" },
	{ 0x120 , 0x0 , 0x0 , "DCAN_IF2CMD" },	
	{ 0x104 , 0x0 , 0x0 , "DCAN_IF1MSK" },
	{ 0x124 , 0x0 , 0x0 , "DCAN_IF2MSK" },
	{ 0x108 , 0x0 , 0x0 , "DCAN_IF1ARB" },
	{ 0x128 , 0x0 , 0x0 , "DCAN_IF2ARB" },
	{ 0x10C , 0x0 , 0x0 , "DCAN_IF1MCTL" },
	{ 0x12C , 0x0 , 0x0 , "DCAN_IF2MCTL" },
	{ 0x110 , 0x0 , 0x0 , "DCAN_IF1DATA" },
	{ 0x114 , 0x0 , 0x0 , "DCAN_IF1DATB" },
	{ 0x130 , 0x0 , 0x0 , "DCAN_IF2DATA" },
	{ 0x134 , 0x0 , 0x0 , "DCAN_IF2DATB" },
	{ 0x140 , 0x0 , 0x0 , "DCAN_IF3OBS" },
	{ 0x144 , 0x0 , 0x0 , "DCAN_IF3MSK" },
	{ 0x148 , 0x0 , 0x0 , "DCAN_IF3ARB" },
	{ 0x14C , 0x0 , 0x0 , "DCAN_IF3MCTL" },
	{ 0x150 , 0x0 , 0x0 , "DCAN_IF3DATA" },
	{ 0x154 , 0x0 , 0x0 , "DCAN_IF3DATB" },
	{ 0x160 , 0x0 , 0x0 , "DCAN_IF3UPD12" },
	{ 0x164 , 0x0 , 0x0 , "DCAN_IF3UPD34" },
	{ 0x168 , 0x0 , 0x0 , "DCAN_IF3UPD56" },
	{ 0x16C , 0x0 , 0x0 , "DCAN_IF3UPD78" }
};

/* base addresses
GPIO0   0x44E07000
GPIO1   0x4804C000
GPIO2   0x481AC000
GPIO3   0x481AE000
*/
static struct reg_info am335x_gpio_registers[] = {
	{ 0x000, 0x0, 0x0, "GPIO_REVISION" },
	{ 0x010, 0x0, 0x0, "GPIO_SYSCONFIG" },
	{ 0x024, 0x0, 0x0, "GPIO_IRQSTATUS_RAW_0" },
     	{ 0x028, 0x0, 0x0, "GPIO_IRQSTATUS_RAW_1" },
	{ 0x02C, 0x0, 0x0, "GPIO_IRQSTATUS_0" },
	{ 0x030, 0x0, 0x0, "GPIO_IRQSTATUS_1" },
	{ 0x034, 0x0, 0x0, "GPIO_IRQSTATUS_SET_0" },
	{ 0x038, 0x0, 0x0, "GPIO_IRQSTATUS_SET_1" },
	{ 0x03C, 0x0, 0x0, "GPIO_IRQSTATUS_CLR_0" },
	{ 0x040, 0x0, 0x0, "GPIO_IRQSTATUS_CLR_1" },       		
	{ 0x114, 0x0, 0x0, "GPIO_SYSSTATUS" },
	{ 0x130, 0x0, 0x0, "GPIO_CTRL" },
	{ 0x134, 0x0, 0x0, "GPIO_OE" },
	{ 0x138, 0x0, 0x0, "GPIO_DATAIN" },
 	{ 0x13C, 0x0, 0x0, "GPIO_DATAOUT" },
 	{ 0x140, 0x0, 0x0, "GPIO_LEVELDETECT0" },
 	{ 0x144, 0x0, 0x0, "GPIO_LEVELDETECT1" },
	{ 0x148, 0x0, 0x0, "GPIO_RISINGDETECT" },
 	{ 0x14C, 0x0, 0x0, "GPIO_FALLINGDETECT" },
 	{ 0x150, 0x0, 0x0, "GPIO_DEBOUNCEENABLE" },
	{ 0x154, 0x0, 0x0, "GPIO_DEBOUNCINGTIME" },
 	{ 0x190, 0x0, 0x0, "GPIO_CLEARDATAOUT" },
	{ 0x194, 0x0, 0x0, "GPIO_SETDATAOUT" }	
};

/*base addresses
I2C0   0x44E0B000
I2C1   0x4802A000
I2C2   0x4819C000
*/
static struct reg_info am335x_i2c_registers[] = {
	{ 0x00, 0x0, 0x0, "I2C_REVNB_LO" },
	{ 0x04, 0x0, 0x0, "I2C_REVNB_HI" },
	{ 0x10, 0x0, 0x0, "I2C_SYSC" },
	{ 0x24, 0x0, 0x0, "I2C_IRQSTATUS_RAW" },
	{ 0x28, 0x0, 0x0, "I2C_IRQSTATUS" },
	{ 0x2C, 0x0, 0x0, "I2C_IRQENABLE_SET" },
	{ 0x30, 0x0, 0x0, "I2C_IRQENABLE_CLR" },
	{ 0x34, 0x0, 0x0, "I2C_WE" },
	{ 0x38, 0x0, 0x0, "I2C_DMARXENABLE_SET" },
	{ 0x3C, 0x0, 0x0, "I2C_DMATXENABLE_SET" },       		
	{ 0x40, 0x0, 0x0, "I2C_DMATXENABLE_CLR" },
	{ 0x44, 0x0, 0x0, "I2C_DMATXENABLE_CLR" },
	{ 0x48, 0x0, 0x0, "I2C_DMARXWAKE_EN" },
	{ 0x4C, 0x0, 0x0, "I2C_DMATXWAKE_EN" },
	{ 0x90, 0x0, 0x0, "I2C_SYSS" },
	{ 0x94, 0x0, 0x0, "I2C_BUF" },
	{ 0x98, 0x0, 0x0, "I2C_CNT" },
	{ 0x9C, 0x0, 0x0, "I2C_DATA" },
	{ 0xA4, 0x0, 0x0, "I2C_CON" },
	{ 0xA8, 0x0, 0x0, "I2C_OA" },
	{ 0xAC, 0x0, 0x0, "I2C_SA" },
	{ 0xB0, 0x0, 0x0, "I2C_PSC" },
	{ 0xB4, 0x0, 0x0, "I2C_SCLL" },
	{ 0xB8, 0x0, 0x0, "I2C_SCLH" },
	{ 0xBC, 0x0, 0x0, "I2C_SYSTEST" },
	{ 0xC0, 0x0, 0x0, "I2C_BUFSTAT" },
	{ 0xC4, 0x0, 0x0, "I2C_OA1" },
	{ 0xC8, 0x0, 0x0, "I2C_OA2" },
	{ 0XCC, 0x0, 0x0, "I2C_OA3" },
	{ 0XD0, 0x0, 0x0, "I2C_ACTOA" },
	{ 0xD4, 0x0, 0x0, "I2C_SBLOCK" }
};

// base address LCD_CONTROLLER  0x4830E000
static struct reg_info am335x_lcd_controller_registers[] = {
	{ 0x00, 0x0, 0x0, "LCD_PID" },
	{ 0x04, 0x0, 0x0, "LCD_CTRL" },
	{ 0x0C, 0x0, 0x0, "LCD_LIDD_CTRL" },
     	{ 0x10, 0x0, 0x0, "LCD_LIDD_CS0_CONF" },
	{ 0x14, 0x0, 0x0, "LCD_LIDD_CS0_ADDR" },
	{ 0x18, 0x0, 0x0, "LCD_LIDD_CS0_DATA" },
	{ 0x1C, 0x0, 0x0, "LCD_LIDD_CS1_CONF" },
	{ 0x20, 0x0, 0x0, "LCD_LIDD_CS1_ADDR" },
	{ 0x24, 0x0, 0x0, "LCD_LIDD_CS1_DATA" },
	{ 0x28, 0x0, 0x0, "LCD_RASTER_CTRL" },
	{ 0x2C, 0x0, 0x0, "LCD_RASTER_TIMING_0" },
	{ 0x30, 0x0, 0x0, "LCD_RASTER_TIMING_1" },
	{ 0x34, 0x0, 0x0, "LCD_RASTER_TIMING_2" },
	{ 0x38, 0x0, 0x0, "LCD_RASTER_SUBPANEL" },
	{ 0x3C, 0x0, 0x0, "LCD_RASTER_SUBPANEL2" },
	{ 0x40, 0x0, 0x0, "LCD_LCDDMA_CTRL" },
 	{ 0x44, 0x0, 0x0, "LCD_LCDDMA_FB0_BASE" },
 	{ 0x48, 0x0, 0x0, "LCD_LCDDMA_FB0_CEILING" },
 	{ 0x4C, 0x0, 0x0, "LCD_LCDDMA_FB1_BASE" },
	{ 0x50, 0x0, 0x0, "LCD_LCDDMA_FB1_CEILING" },
 	{ 0x54, 0x0, 0x0, "LCD_SYSCONFIG" },
 	{ 0x58, 0x0, 0x0, "LCD_IRQSTATUS_RAW" },
	{ 0x5C, 0x0, 0x0, "LCD_IRQSTATUS" },
 	{ 0x60, 0x0, 0x0, "LCD_IRQSTATUS_SET" },
	{ 0x64, 0x0, 0x0, "LCD_IRQSTATUS_CLEAR" },
	{ 0x6C, 0x0, 0x0, "LCD_CLKC_ENABLE" },
	{ 0x70, 0x0, 0x0, "LCD_CLKC_RESET" }
};

/* base addresses
MCASP0   0x48038000
MCASP1   0X4803C000
*/
static struct reg_info am335x_mcasp_registers[] = {
	{ 0x000, 0x0, 0x0, "MCASP_REV" },
	{ 0x010, 0x0, 0x0, "MCASP_PFUNC" },
	{ 0x014, 0x0, 0x0, "MCASP_PDIR" },
     	{ 0x018, 0x0, 0x0, "MCASP_PDOUT" },
	{ 0x01C, 0x0, 0x0, "MCASP_PDIN" },
	{ 0x01C, 0x0, 0x0, "MCASP_PDSET" },
	{ 0x020, 0x0, 0x0, "MCASP_PDCLR" },
	{ 0x044, 0x0, 0x0, "MCASP_GBLCTL" },
	{ 0x048, 0x0, 0x0, "MCASP_AMUTE" },
	{ 0x04C, 0x0, 0x0, "MCASP_DBLCTL" },
	{ 0x050, 0x0, 0x0, "MCASP_DITCTL" },       		
	{ 0x060, 0x0, 0x0, "MCASP_RGBLCTL" },
	{ 0x064, 0x0, 0x0, "MCASP_RMASK" },
	{ 0x068, 0x0, 0x0, "MCASP_RFMT" },
	{ 0x06C, 0x0, 0x0, "MCASP_AFSRCTL" },
	{ 0x070, 0x0, 0x0, "MCASP_ACLKRCTL" },
 	{ 0x074, 0x0, 0x0, "MCASP_AHCLKRCTL" },
 	{ 0x078, 0x0, 0x0, "MCASP_RTDM" },
 	{ 0x07C, 0x0, 0x0, "MCASP_RINTCTL" },
	{ 0x080, 0x0, 0x0, "MCASP_RSTAT" },
 	{ 0x084, 0x0, 0x0, "MCASP_RSLOT" },
 	{ 0x088, 0x0, 0x0, "MCASP_RCLKCHK" },
	{ 0x08C, 0x0, 0x0, "MCASP_REVTCTL" },
 	{ 0x0A0, 0x0, 0x0, "MCASP_XGBLCTL" },
	{ 0x0A4, 0x0, 0x0, "MCASP_XMASK" },
	{ 0x0A8, 0x0, 0x0, "MCASP_XFMT" },
	{ 0x0AC, 0x0, 0x0, "MCASP_AFSXCTL" },
	{ 0x0B0, 0x0, 0x0, "MCASP_ACLKXCTL" },	
	{ 0x0B4, 0x0, 0x0, "MCASP_AHCLKXCTL" },
	{ 0x0B8, 0x0, 0x0, "MCASP_XTDM" },
	{ 0x0BC, 0x0, 0x0, "MCASP_XINTCTL" },
	{ 0x0C0, 0x0, 0x0, "MCASP_XSTAT" },
	{ 0x0C4, 0x0, 0x0, "MCASP_XSLOT" },
	{ 0x0C8, 0x0, 0x0, "MCASP_XCLKCHK" },
	{ 0x0CC, 0x0, 0x0, "MCASP_XEVTCTL" },
	{ 0x100, 0x0, 0x0, "MCASP_DITCSRA0" },
	{ 0x104, 0x0, 0x0, "MCASP_DITCSRA1" },
	{ 0x108, 0x0, 0x0, "MCASP_DITCSRA2" },
	{ 0x10C, 0x0, 0x0, "MCASP_DITCSRA3" },
	{ 0x110, 0x0, 0x0, "MCASP_DITCSRA4" },
	{ 0x114, 0x0, 0x0, "MCASP_DITCSRA5" },
	{ 0x118, 0x0, 0x0, "MCASP_DITCSRB0" },
	{ 0x11C, 0x0, 0x0, "MCASP_DITCSRB1" },
	{ 0x120, 0x0, 0x0, "MCASP_DITCSRB2" },
	{ 0x124, 0x0, 0x0, "MCASP_DITCSRB3" },
	{ 0x128, 0x0, 0x0, "MCASP_DITCSRB4" },
	{ 0x12C, 0x0, 0x0, "MCASP_DITCSRB5" },
	{ 0x130, 0x0, 0x0, "MCASP_DITUDRA0" },
	{ 0x134, 0x0, 0x0, "MCASP_DITUDRA1" },
	{ 0x138, 0x0, 0x0, "MCASP_DITUDRA2" },
	{ 0x13C, 0x0, 0x0, "MCASP_DITUDRA3" },
	{ 0x140, 0x0, 0x0, "MCASP_DITUDRA4" },
	{ 0x144, 0x0, 0x0, "MCASP_DITUDRA5" },		
	{ 0x148, 0x0, 0x0, "MCASP_DITUDRB0" },
	{ 0x14C, 0x0, 0x0, "MCASP_DITUDRB1" },	
	{ 0x150, 0x0, 0x0, "MCASP_DITUDRB2" },
	{ 0x154, 0x0, 0x0, "MCASP_DITUDRB3" },
	{ 0x158, 0x0, 0x0, "MCASP_DITUDRB4" },
	{ 0x15C, 0x0, 0x0, "MCASP_DITUDRB5" },
	{ 0x180, 0x0, 0x0, "MCASP_SRCTL0" },
	{ 0x184, 0x0, 0x0, "MCASP_SRCTL1" },
	{ 0x188, 0x0, 0x0, "MCASP_SRCTL2" },
	{ 0x18C, 0x0, 0x0, "MCASP_SRCTL3" },
	{ 0x200, 0x0, 0x0, "MCASP_XBUF0" },
	{ 0x204, 0x0, 0x0, "MCASP_XBUF1" },
	{ 0x208, 0x0, 0x0, "MCASP_XBUF2" },
	{ 0x20C, 0x0, 0x0, "MCASP_XBUF3" },
	{ 0x280, 0x0, 0x0, "MCASP_RBUF0" },
	{ 0x284, 0x0, 0x0, "MCASP_RBUF1" },
	{ 0x288, 0x0, 0x0, "MCASP_RBUF2" },
	{ 0x28C, 0x0, 0x0, "MCASP_RBUF3" }
};

/*base addresses
MCSPI0   0x48030000
MCSPI1   0x481A0000
*/
static struct reg_info am335x_mcspi_registers[] = {
	{ 0x000, 0x0, 0x0, "MCSPI_REVISION" 	},
	{ 0x110, 0x0, 0x0, "MCSPI_SYSCONFIG" 	},
	{ 0x114, 0x0, 0x0, "MCSPI_SYSSTATUS" 	},
     	{ 0x118, 0x0, 0x0, "MCSPI_IRQSTATUS" 	},
	{ 0x11C, 0x0, 0x0, "MCSPI_IRQENABLE" 	},
	{ 0x124, 0x0, 0x0, "MCSPI_SYST" 	},
	{ 0x128, 0x0, 0x0, "MCSPI_MODULCTRL" 	},
	{ 0x12C, 0x0, 0x0, "MCSPI_CH0CONF" 	},
	{ 0x130, 0x0, 0x0, "MCSPI_CH0STAT" 	},
	{ 0x134, 0x0, 0x0, "MCSPI_CH0CTRL" 	},       		
	{ 0x138, 0x0, 0x0, "MCSPI_TX0" 		},
	{ 0x13C, 0x0, 0x0, "MCSPI_RX0" 		},
	{ 0x140, 0x0, 0x0, "MCSPI_CH1CONF" 	},
	{ 0x144, 0x0, 0x0, "MCSPI_CH1STAT" 	},
 	{ 0x148, 0x0, 0x0, "MCSPI_CH1CTRL" 	},
 	{ 0x14C, 0x0, 0x0, "MCSPI_TX1" 		},
 	{ 0x150, 0x0, 0x0, "MCSPI_RX1" 		},
	{ 0x154, 0x0, 0x0, "MCSPI_CH2CONF" 	},
 	{ 0x158, 0x0, 0x0, "MCSPI_CH2STAT" 	},
 	{ 0x15C, 0x0, 0x0, "MCSPI_CH2CTRL" 	},
	{ 0x160, 0x0, 0x0, "MCSPI_TX2" 		},
 	{ 0x164, 0x0, 0x0, "MCSPI_RX2" 		},
	{ 0x168, 0x0, 0x0, "MCSPI_CH3CONF" 	},
	{ 0x16C, 0x0, 0x0, "MCSPI_CH3STAT" 	},
	{ 0x170, 0x0, 0x0, "MCSPI_CH3CTRL" 	},
	{ 0x174, 0x0, 0x0, "MCSPI_RX3" 		},
	{ 0x178, 0x0, 0x0, "MCSPI_TX3" 		},
	{ 0x17C, 0x0, 0x0, "MCSPI_XFERLEVEL" 	},
	{ 0x180, 0x0, 0x0, "MCSPI_DAFTX" 	},
	{ 0x1A0, 0x0, 0x0, "MCSPI_DAFRX" 	}
};

// MMC/SD REGISTERS
/*
base addresses 
MMCHS0   0x48060000
MMC1     0x481D8000
MMCHS2   0x47810000
*/
static struct reg_info am335x_mmchs_registers[] = {
	{ 0x110, 0x0, 0x0, "SD_SYSCONFIG" 	},
	{ 0x114, 0x0, 0x0, "SD_SYSSTATUS"	},
	{ 0x124, 0x0, 0x0, "SD_CSRE" 		},
	{ 0x128, 0x0, 0x0, "SD_SYSTEST" 	},
	{ 0x12C, 0x0, 0x0, "SD_CON" 		},
 	{ 0x130, 0x0, 0x0, "SD_PWCNT" 		},
     	{ 0x200, 0x0, 0x0, "SD_SDMASA" 		},
	{ 0x204, 0x0, 0x0, "SD_BLK" 		},
	{ 0x208, 0x0, 0x0, "SD_ARG" 		},
	{ 0x20C, 0x0, 0x0, "SD_CMD" 		},
	{ 0x210, 0x0, 0x0, "SD_RSP10" 		},
	{ 0x214, 0x0, 0x0, "SD_RSP32" 		},
	{ 0x218, 0x0, 0x0, "SD_RSP54" 		},
	{ 0x21C, 0x0, 0x0, "SD_RSP76" 		},
	{ 0x220, 0x0, 0x0, "SD_DATA" 		},
	{ 0x224, 0x0, 0x0, "SD_PSTATE" 		},
	{ 0x228, 0x0, 0x0, "SD_HCTL" 		},
 	{ 0x22C, 0x0, 0x0, "SD_SYSCTL" 		},
 	{ 0x230, 0x0, 0x0, "SD_STAT" 		},
 	{ 0x234, 0x0, 0x0, "SD_IE" 		},
	{ 0x238, 0x0, 0x0, "SD_ISE" 		},
 	{ 0x23C, 0x0, 0x0, "SD_AC12" 		},
 	{ 0x240, 0x0, 0x0, "SD_CAPA" 		},
	{ 0x248, 0x0, 0x0, "SD_CUR_CAPA" 	},
 	{ 0x250, 0x0, 0x0, "SD_FE" 		},
	{ 0x254, 0x0, 0x0, "SD_ADMAES" 		},
	{ 0x258, 0x0, 0x0, "SD_ADMASAL" 	},
	{ 0x25C, 0x0, 0x0, "SD_ADMASAH" 	},
	{ 0x2FC, 0x0, 0x0, "SD_REV" 		}
};

// base address RTCSS   0x44E3E000
static struct reg_info am335x_rtc_registers[] = {
	{ 0x00, 0x0, 0x0, "SECONDS_REG" 	},
	{ 0x04, 0x0, 0x0, "MINUTES_REG" 	},
	{ 0x08, 0x0, 0x0, "HOURS_REG" 		},
	{ 0x0C, 0x0, 0x0, "DAYS_REG" 		},
	{ 0x10, 0x0, 0x0, "MONTHS_REG" 		},
	{ 0x14, 0x0, 0x0, "YEARS_REG" 		},
	{ 0x18, 0x0, 0x0, "WEEKS_REG" 		},
	{ 0x20, 0x0, 0x0, "ALARM_SECONDS_REG" 	},
	{ 0x24, 0x0, 0x0, "ALARM_MINUTES_REG" 	},
     	{ 0x28, 0x0, 0x0, "ALARM_HOURS_REG" 	},
	{ 0x2C, 0x0, 0x0, "ALARM_DAYS_REG" 	},
	{ 0x30, 0x0, 0x0, "ALARM_MONTHS_REG" 	},
	{ 0x34, 0x0, 0x0, "ALARM_YEARS_REG" 	},
	{ 0x40, 0x0, 0x0, "RTC_CTRL_REG" 	},
	{ 0x44, 0x0, 0x0, "RTC_STATUS_REG" 	},
	{ 0x48, 0x0, 0x0, "RTC_INTERRUPTS_REG" 	},
	{ 0x4C, 0x0, 0x0, "RTC_COMP_LSB_REG" 	},
	{ 0x50, 0x0, 0x0, "RTC_COMP_MSB_REG" 	},
 	{ 0x54, 0x0, 0x0, "RTC_OSC_REG" 	},
 	{ 0x60, 0x0, 0x0, "RTC_SCRATCH0_REG" 	},
 	{ 0x64, 0x0, 0x0, "RTC_SCRATCH1_REG" 	},
	{ 0x68, 0x0, 0x0, "RTC_SCRATCH2_REG" 	},
 	{ 0x6C, 0x0, 0x0, "KICK0R" 		},
 	{ 0x70, 0x0, 0x0, "KICK1R" 		},
	{ 0x74, 0x0, 0x0, "RTC_REVISION" 	},
 	{ 0x78, 0x0, 0x0, "RTC_SYSCONFIG" 	},
	{ 0x7C, 0x0, 0x0, "RTC_IRQWAKEEN" 	},
	{ 0x80, 0x0, 0x0, "ALARM2_SECONDS_REG"	},	
	{ 0x84, 0x0, 0x0, "ALARM2_MINUTES_REG"	},
	{ 0x88, 0x0, 0x0, "ALARM2_HOURS_REG" 	},
	{ 0x8C, 0x0, 0x0, "ALARM2_DAYS_REG" 	},
	{ 0x90, 0x0, 0x0, "ALARM2_MONTHS_REG" 	},
	{ 0x94, 0x0, 0x0, "ALARM2_YEARS_REG" 	},
	{ 0x98, 0x0, 0x0, "RTC_PMIC" 		},
	{ 0x9C, 0x0, 0x0, "RTC_DEBOUNCE" 	}
};

/*
base addresses
DMTIMER0   0x44E05000
DMTIMER1   0x44E31000 
DMTIMER2   0x48040000
DMTIMER3   0x48042000
DMTIMER4   0x48044000
DMTIMER5   0x48046000
DMTIMER6   0x48048000
DMTIMER7   0x4804A000
*/
static struct reg_info am335x_timer_registers[] = {
	{ 0x00, 0x0, 0x0, "TIMER_TIDR" 		},
	{ 0x10, 0x0, 0x0, "TIMER_TIOCP_CFG" 	},
	{ 0x24, 0x0, 0x0, "TIMER_IRQSTATUS_RAW" },
     	{ 0x28, 0x0, 0x0, "TIMER_IRQSTATUS" 	},
	{ 0x2C, 0x0, 0x0, "TIMER_IRQENABLE_SET" },
	{ 0x30, 0x0, 0x0, "TIMER_IRQENABLE_CLR" },
	{ 0x34, 0x0, 0x0, "TIMER_IRQWAKEEN" 	},
	{ 0x38, 0x0, 0x0, "TIMER_TCLR" 		},
	{ 0x3C, 0x0, 0x0, "TIMER_TCRR" 		},
	{ 0x40, 0x0, 0x0, "TIMER_TLDR" 		},
	{ 0x44, 0x0, 0x0, "TIMER_TTGR" 		},
	{ 0x48, 0x0, 0x0, "TIMER_TWPS" 		},
	{ 0x4C, 0x0, 0x0, "TIMER_TMAR" 		},
	{ 0x50, 0x0, 0x0, "TIMER_TCAR1" 	},
 	{ 0x54, 0x0, 0x0, "TIMER_TSICR" 	},
 	{ 0x58, 0x0, 0x0, "TIMER_TCAR2" 	}
};

//TOUCH SCREEN CONTROLLER REGISTERS
// base address ADC_TSC   0x44E0D000
static struct reg_info am335x_tsc_registers[] = {
	{ 0x000, 0x0, 0x0, "TSC_REVISION" 		},
	{ 0x010, 0x0, 0x0, "TSC_SYSCONFIG" 		},
	{ 0x024, 0x0, 0x0, "TSC_IRQSTATUS_RAW" 		},
     	{ 0x028, 0x0, 0x0, "TSC_IRQSTATUS" 		},
	{ 0x02C, 0x0, 0x0, "TSC_IRQENABLE_SET" 		},
	{ 0x030, 0x0, 0x0, "TSC_IRQENABLE_CLR" 		},
	{ 0x034, 0x0, 0x0, "TSC_IRQWAKEUP" 		},
	{ 0x038, 0x0, 0x0, "TSC_DMAENABLE_SET" 		},
	{ 0x03C, 0x0, 0x0, "TSC_DMAENABLE_CLR" 		},
	{ 0x040, 0x0, 0x0, "TSC_CTRL" 			},
	{ 0x044, 0x0, 0x0, "TSC_ADCSTAT" 		},
	{ 0x048, 0x0, 0x0, "TSC_ADCRANGE" 		},
	{ 0x04C, 0x0, 0x0, "TSC_ADC_CLKDIV" 		},
	{ 0x050, 0x0, 0x0, "TSC_ADC_MISC" 		},
 	{ 0x054, 0x0, 0x0, "TSC_STEPENABLE" 		},
 	{ 0x058, 0x0, 0x0, "TSC_IDLECONFIG"		},
 	{ 0x05C, 0x0, 0x0, "TSC_TS_CHARGE_STEPCONFIG"	},
	{ 0x060, 0x0, 0x0, "TSC_TS_CHARGE_DELAY" 	},
 	{ 0x064, 0x0, 0x0, "TSC_STEPCONFIG1" 		},
	{ 0x068, 0x0, 0x0, "TSC_STEPDELAY1" 		},
	{ 0x06C, 0x0, 0x0, "TSC_STEPCONFIG2" 		},
 	{ 0x070, 0x0, 0x0, "TSC_STEPDELAY2" 		},
	{ 0x074, 0x0, 0x0, "TSC_STEPCONFIG3" 		},
	{ 0x078, 0x0, 0x0, "TSC_STEPDELAY3" 		},
	{ 0x07C, 0x0, 0x0, "TSC_STEPCONFIG4" 		},
	{ 0x080, 0x0, 0x0, "TSC_STEPDELAY4" 		},
	{ 0x084, 0x0, 0x0, "TSC_STEPCONFIG5" 		},
	{ 0x088, 0x0, 0x0, "TSC_STEPDELAY5" 		},
	{ 0x08C, 0x0, 0x0, "TSC_STEPCONFIG6" 		},
	{ 0x090, 0x0, 0x0, "TSC_STEPDELAY6" 		},
	{ 0x094, 0x0, 0x0, "TSC_STEPCONFIG7" 		},
	{ 0x098, 0x0, 0x0, "TSC_STEPDELAY7" 		},
	{ 0x09C, 0x0, 0x0, "TSC_STEPCONFIG8" 		},
	{ 0x0A0, 0x0, 0x0, "TSC_STEPDELAY8" 		},
	{ 0x0A4, 0x0, 0x0, "TSC_STEPCONFIG9" 		},
	{ 0x0A8, 0x0, 0x0, "TSC_STEPDELAY9" 		},
	{ 0x0AC, 0x0, 0x0, "TSC_STEPCONFIG10" 		},
	{ 0x0B0, 0x0, 0x0, "TSC_STEPDELAY10" 		},
	{ 0x0B4, 0x0, 0x0, "TSC_STEPCONFIG11" 		},
	{ 0x0B8, 0x0, 0x0, "TSC_STEPDELAY11" 		},
	{ 0x0BC, 0x0, 0x0, "TSC_STEPCONFIG12" 		},
	{ 0x0C0, 0x0, 0x0, "TSC_STEPDELAY12"		},
	{ 0x0C4, 0x0, 0x0, "TSC_STEPCONFIG13" 		},
	{ 0x0C8, 0x0, 0x0, "TSC_STEPDELAY13"		},
	{ 0x0CC, 0x0, 0x0, "TSC_STEPCONFIG14" 		},
	{ 0x0D0, 0x0, 0x0, "TSC_STEPDELAY14" 		},
	{ 0x0D4, 0x0, 0x0, "TSC_STEPCONFIG15" 		},
	{ 0x0D8, 0x0, 0x0, "TSC_STEPDELAY15" 		},
	{ 0x0DC, 0x0, 0x0, "TSC_STEPCONFIG16" 		},
	{ 0x0E0, 0x0, 0x0, "TSC_STEPDELAY16" 		},
	{ 0x0E4, 0x0, 0x0, "TSC_FIFO0COUNT" 		},
	{ 0x0E8, 0x0, 0x0, "TSC_FIFO0THRESHOLD" 	},
	{ 0x0EC, 0x0, 0x0, "TSC_DMA0REQ" 		},
	{ 0x0F0, 0x0, 0x0, "TSC_FIFO1COUNT" 		},
	{ 0x0F4, 0x0, 0x0, "TSC_FIFO1THRESHOLD" 	},
	{ 0x0F8, 0x0, 0x0, "TSC_DMA1REQ" 		},
	{ 0x100, 0x0, 0x0, "TSC_FIFO0DATA" 		},
	{ 0x200, 0x0, 0x0, "TSC_FIFO1DATA" 		}
};

/*
base addresses
UART0   0x44E09000
UART1   0x48022000
UART2   0x48024000
UART3   0x481A6000
UART4   0x481A8000
UART5   0x481AA000
*/
static struct reg_info am335x_uart_registers[] = {
	{ 0x00, 0x0, 0x0, "UART_RHR/THR" 	},
	{ 0x04, 0x0, 0x0, "UART_IER" 		},
	{ 0x08, 0x0, 0x0, "UART_IIR/FCR" 	},
	{ 0x0C, 0x0, 0x0, "UART_LCR" 		},
	{ 0x10, 0x0, 0x0, "UART_MCR" 		},
 	{ 0x14, 0x0, 0x0, "UART_LSR/-"		},
     	{ 0x18, 0x0, 0x0, "UART_MSR/TCR" 	},
	{ 0x1C, 0x0, 0x0, "UART_SPR/TLR" 	},
	{ 0x20, 0x0, 0x0, "UART_MDR1" 		},
	{ 0x24, 0x0, 0x0, "UART_MDR2" 		},
	{ 0x28, 0x0, 0x0, "UART_SFLSR/TXFLL" 	},
	{ 0x2C, 0x0, 0x0, "UART_RESUME/TXFLH" 	},       		
	{ 0x30, 0x0, 0x0, "UART_SFREGL/RXFLL" 	},
	{ 0x34, 0x0, 0x0, "UART_SFREGH/RXFLH" 	},
	{ 0x38, 0x0, 0x0, "UART_BLR" 		},
	{ 0x3C, 0x0, 0x0, "UART_ACREG" 		},
	{ 0x40, 0x0, 0x0, "UART_SCR" 		},
 	{ 0x44, 0x0, 0x0, "UART_SSR" 		},
 	{ 0x48, 0x0, 0x0, "UART_EBLR" 		},
 	{ 0x50, 0x0, 0x0, "UART_MVR/-" 		},
	{ 0x54, 0x0, 0x0, "UART_SYSC" 		},
 	{ 0x58, 0x0, 0x0, "UART_SYSS" 		},
 	{ 0x5C, 0x0, 0x0, "UART_WER" 		},
	{ 0x60, 0x0, 0x0, "UART_CFPS" 		},
 	{ 0x64, 0x0, 0x0, "UART_RXFIFO_LVL" 	},
	{ 0x68, 0x0, 0x0, "UART_TXFIFO_LVL" 	},
	{ 0x6C, 0x0, 0x0, "UART_IER2" 		},
	{ 0x70, 0x0, 0x0, "UART_ISR2" 		},
	{ 0x74, 0x0, 0x0, "UART_FREQ_SEL" 	},
	{ 0x78, 0x0, 0x0, "UART_----" 		},
  	{ 0X7C, 0x0, 0x0, "UART_----" 		},
 	{ 0X80, 0x0, 0x0, "UART_MDR3" 		}
};

// base address USBSS   0x47400000
static struct reg_info am335x_usb_registers[] = {
	{ 0x000, 0x0, 0x0, "USBSS_REVREG" 		},
	{ 0x010, 0x0, 0x0, "USBSS_SYSCONFIG" 		},
	{ 0x024, 0x0, 0x0, "USBSS_IRQSTATRAW" 		},
     	{ 0x028, 0x0, 0x0, "USBSS_IRQSTAT" 		},
	{ 0x02C, 0x0, 0x0, "USBSS_IRQENABLER" 		},
	{ 0x030, 0x0, 0x0, "USBSS_IRQCLEARR" 		},
 	{ 0x010, 0x0, 0x0, "USBSS_IRQDMATHOLDTX00" 	},
	{ 0x104, 0x0, 0x0, "USBSS_IRQDMATHOLDTX01" 	},
	{ 0x108, 0x0, 0x0, "USBSS_IRQDMATHOLDTX02" 	},
	{ 0x10C, 0x0, 0x0, "USBSS_IRQDMATHOLDTX03" 	},
	{ 0x110, 0x0, 0x0, "USBSS_IRQDMATHOLDRX00" 	},
	{ 0x114, 0x0, 0x0, "USBSS_IRQDMATHOLDRX01" 	},
	{ 0x118, 0x0, 0x0, "USBSS_IRQDMATHOLDRX02" 	},
	{ 0x11C, 0x0, 0x0, "USBSS_IRQDMATHOLDRX03" 	},
	{ 0x120, 0x0, 0x0, "USBSS_IRQDMATHOLDTX10" 	},
 	{ 0x124, 0x0, 0x0, "USBSS_IRQDMATHOLDTX11" 	},
 	{ 0x128, 0x0, 0x0, "USBSS_IRQDMATHOLDTX12" 	},
	{ 0x12C, 0x0, 0x0, "USBSS_IRQDMATHOLDTX13" 	},
 	{ 0x130, 0x0, 0x0, "USBSS_IRQDMATHOLDRX10" 	},
 	{ 0x134, 0x0, 0x0, "USBSS_IRQDMATHOLDRX11" 	},
	{ 0x138, 0x0, 0x0, "USBSS_IRQDMATHOLDRX12" 	},
 	{ 0x13C, 0x0, 0x0, "USBSS_IRQDMATHOLDRX13" 	},
	{ 0x140, 0x0, 0x0, "USBSS_IRQDMAENABLE0" 	},
	{ 0x144, 0x0, 0x0, "USBSS_IRQDMAENABLE1" 	},
	{ 0x200, 0x0, 0x0, "USBSS_IRQFRAMETHOLDTX00" 	},
	{ 0x204, 0x0, 0x0, "USBSS_IRQFRAMETHOLDTX01" 	},
	{ 0x208, 0x0, 0x0, "USBSS_IRQFRAMETHOLDTX02" 	},
	{ 0x20C, 0x0, 0x0, "USBSS_IRQFRAMETHOLDTX03" 	},
	{ 0x210, 0x0, 0x0, "USBSS_IRQFRAMETHOLDRX00" 	},
	{ 0x214, 0x0, 0x0, "USBSS_IRQFRAMETHOLDRX01" 	},
	{ 0x218, 0x0, 0x0, "USBSS_IRQFRAMETHOLDRX02" 	},
	{ 0x21C, 0x0, 0x0, "USBSS_IRQFRAMETHOLDRX03" 	},
	{ 0x220, 0x0, 0x0, "USBSS_IRQFRAMETHOLDTX10" 	},
	{ 0x224, 0x0, 0x0, "USBSS_IRQFRAMETHOLDTX11" 	},
	{ 0x228, 0x0, 0x0, "USBSS_IRQFRAMETHOLDTX12" 	},
	{ 0x22C, 0x0, 0x0, "USBSS_IRQFRAMETHOLDTX13" 	},
	{ 0x230, 0x0, 0x0, "USBSS_IRQFRAMETHOLDRX10" 	},
	{ 0x234, 0x0, 0x0, "USBSS_IRQFRAMETHOLDRX11" 	},
	{ 0x238, 0x0, 0x0, "USBSS_IRQFRAMETHOLDRX12" 	},
	{ 0x23C, 0x0, 0x0, "USBSS_IRQFRAMETHOLDRX13" 	},
	{ 0x240, 0x0, 0x0, "USBSS_IRQFRAMEENABLE0" 	},
	{ 0x244, 0x0, 0x0, "USBSS_IRQFRAMEENABLE1" 	}
};

// WATCHDOG TIMER REGISTERS
// base addresses WDT1   0x44E35000  
static struct reg_info am335x_wdt_registers[] = {
	{ 0x00, 0x0, 0x0, "WDT_WIDR" 		},
	{ 0x10, 0x0, 0x0, "WDT_WDSC"		},
	{ 0x14, 0x0, 0x0, "WDT_WDST" 		},
	{ 0x18, 0x0, 0x0, "WDT_WISR" 		},
	{ 0x1C, 0x0, 0x0, "WDT_WIER" 		},
	{ 0x24, 0x0, 0x0, "WDT_WCLR" 		},
     	{ 0x28, 0x0, 0x0, "WDT_WCRR" 		},
	{ 0x2C, 0x0, 0x0, "WDT_WLDR" 		},
	{ 0x30, 0x0, 0x0, "WDT_WTGR" 		},
	{ 0x34, 0x0, 0x0, "WDT_WWPS" 		},
      	{ 0x44, 0x0, 0x0, "WDT_WDLY" 		},
	{ 0x48, 0x0, 0x0, "WDT_WSPR" 		},
	{ 0x54, 0x0, 0x0, "WDT_WIRQSTATRAW" 	},
 	{ 0x58, 0x0, 0x0, "WDT_WIRQSTAT" 	},
 	{ 0x5C, 0x0, 0x0, "WDT_WIRQENSET" 	},
	{ 0x60, 0x0, 0x0, "WDT_WIRQENCLR" 	}
};

//Product ID Register
//base address 0x44E10600
static struct reg_info am335x_product_id_registers[] = {
	{ 0x0, 0x0, 0x0, "DEVICE_ID" }
};

#endif		// _AM335x_


// ------------------------------OMAP35x PROCESSOR REGISTERS ------------------------------------------

#ifdef _OMAP35x_
// base address  Display(LCD) Controller   0x48050400
static struct reg_info omap35x_lcd_controller_registers[] = {
	{ 0x000, 0x0, 0x0, "DISPC_REVISION" 		},
	{ 0x010, 0x0, 0x0, "DISPC_SYSCONFIG" 		},
	{ 0x014, 0x0, 0x0, "DISPC_SYSSTATUS" 		},
	{ 0x018, 0x0, 0x0, "DISPC_IRQSTATUS" 		},
	{ 0x01C, 0x0, 0x0, "DISPC_IRQENABLE" 		},
	{ 0x040, 0x0, 0x0, "DISPC_CONTROL" 		},
	{ 0x044, 0x0, 0x0, "DISPC_CONFIG" 		},
	{ 0x05C, 0x0, 0x0, "DISPC_LINE_STATUS" 		},
	{ 0x060, 0x0, 0x0, "DISPC_LINE_NUMBER" 		},
	{ 0x064, 0x0, 0x0, "DISPC_TIMING_H" 		},
	{ 0x068, 0x0, 0x0, "DISPC_TIMING_V"		},
	{ 0x06C, 0x0, 0x0, "DISPC_POL_FREQ" 		},
	{ 0x070, 0x0, 0x0, "DISPC_DIVISOR" 		},
	{ 0x074, 0x0, 0x0, "DISPC_GLOBAL_ALPHA" 	},
	{ 0x078, 0x0, 0x0, "DISPC_SIZE_DIG" 		},
	{ 0x07C, 0x0, 0x0, "DISPC_SIZE_LCD" 		},
	{ 0x088, 0x0, 0x0, "DISPC_GFX_POSITION" 	},
	{ 0x08C, 0x0, 0x0, "DISPC_GFX_SIZE" 		},
	{ 0x0A0, 0x0, 0x0, "DISPC_GFX_ATTRIBUTES" 	},
	{ 0x0A4, 0x0, 0x0, "DISPC_GFX_FIFO_THRESHOLD" 	},
	{ 0x0A8, 0x0, 0x0, "DISPC_GFX_FIFO_SIZE_STATUS" },
	{ 0x0AC, 0x0, 0x0, "DISPC_GFX_ROW_INC" 		},
	{ 0x0B0, 0x0, 0x0, "DISPC_GFX_PIXEL_INC" 	},
	{ 0x0B4, 0x0, 0x0, "DISPC_GFX_WINDOW_SKIP" 	},
	{ 0x0B8, 0x0, 0x0, "DISPC_GFX_TABLE_BA" 	},
	{ 0x220, 0x0, 0x0, "DISPC_CPR_COEF_R" 		},
	{ 0x224, 0x0, 0x0, "DISPC_CPR_COEF_G" 		},
	{ 0x228, 0x0, 0x0, "DISPC_CPR_COEF_B" 		},
	{ 0x22C, 0x0, 0x0, "DISPC_GFX_PRELOAD" 		}
};

// base address Display Subsystem(LCD) 0x48050000
static struct reg_info omap35x_lcd_registers[] = {
	{ 0x00, 0x0, 0x0, "DSS_REVISIONNUMBER" 	},
	{ 0x10, 0x0, 0x0, "DSS_SYSCONFIG"	},
	{ 0x14, 0x0, 0x0, "DSS_SYSSTATUS" 	},
	{ 0x14, 0x0, 0x0, "DSS_IRQSTATUS" 	},
	{ 0x40, 0x0, 0x0, "DSS_CONTROL" 	},
	{ 0x44, 0x0, 0x0, "DSS_SDI_CONTROL" 	},
	{ 0x48, 0x0, 0x0, "DSS_PLL_CONTROL" 	},
	{ 0x5C, 0x0, 0x0, "DSS_SDI_STATUS" 	}
};

/* base addresses
I2C1   0x48070000  
I2C2   0x48072000 
I2C3   0x48060000
*/
static struct reg_info omap35x_i2c_registers[] = {
	{ 0x00, 0x0, 0x0, "I2C_REV"	},
	{ 0x04, 0x0, 0x0, "I2C_IE" 	},
	{ 0x08, 0x0, 0x0, "I2C_STAT" 	},
	{ 0x0C, 0x0, 0x0, "I2C_WE" 	},
	{ 0x10, 0x0, 0x0, "I2C_SYSS" 	},
	{ 0x14, 0x0, 0x0, "I2C_BUF" 	},
	{ 0x18, 0x0, 0x0, "I2C_CNT" 	},
	{ 0x1C, 0x0, 0x0, "I2C_DATA" 	},
	{ 0x20, 0x0, 0x0, "I2C_SYSC" 	},
	{ 0x24, 0x0, 0x0, "I2C_CON" 	},
	{ 0x28, 0x0, 0x0, "I2C_OA0" 	},
	{ 0x2C, 0x0, 0x0, "I2C_SA" 	},
	{ 0x30, 0x0, 0x0, "I2C_PSC" 	},
	{ 0x34, 0x0, 0x0, "I2C_SCLL" 	},
	{ 0x38, 0x0, 0x0, "I2C_SCLH" 	},
	{ 0x3C, 0x0, 0x0, "I2C_SYSTEST" },
	{ 0x40, 0x0, 0x0, "I2C_BUFSTAT" },
	{ 0x44, 0x0, 0x0, "I2C_OA1" 	},
	{ 0x48, 0x0, 0x0, "I2C_OA2" 	},
	{ 0x4C, 0x0, 0x0, "I2C_OA3" 	},
	{ 0x50, 0x0, 0x0, "I2C_ACTOA" 	},
	{ 0x54, 0x0, 0x0, "I2C_SBLOCK" 	}	
};

/* base addresses
UART1   0x4806A000
UART2   0x4806C000
UART3   0x49020000
*/
static struct reg_info omap35x_uart_registers[] = {
	{ 0x000, 0x0, 0x0, "UART_DLL_REG" 	},
	{ 0x000, 0x0, 0x0, "UART_RHR_REG" 	},
	{ 0x000, 0x0, 0x0, "UART_THR_REG" 	},
	{ 0x004, 0x0, 0x0, "UART_DLH_REG" 	},
	{ 0x004, 0x0, 0x0, "UART_IER_REG" 	},
	{ 0x008, 0x0, 0x0, "UART_IIR_REG" 	},
	{ 0x008, 0x0, 0x0, "UART_FCR_REG" 	},
	{ 0x008, 0x0, 0x0, "UART_EFR_REG" 	},
	{ 0x00C, 0x0, 0x0, "UART_LCR_REG" 	},
	{ 0x010, 0x0, 0x0, "UART_MCR_REG" 	},
	{ 0x010, 0x0, 0x0, "UART_XON1_ADDR1_REG"},
	{ 0x014, 0x0, 0x0, "UART_LSR_REG" 	},
	{ 0x014, 0x0, 0x0, "UART_XON2_ADDR2_REG"},
	{ 0x018, 0x0, 0x0, "UART_MSR_REG" 	},
	{ 0x018, 0x0, 0x0, "UART_TCR_REG" 	},
	{ 0x018, 0x0, 0x0, "UART_XOFF1_REG" 	},
	{ 0x01C, 0x0, 0x0, "UART_SPR_REG" 	},
	{ 0x01C, 0x0, 0x0, "UART_TLR_REG" 	},
	{ 0x01C, 0x0, 0x0, "UART_XOFF2_REG" 	},
	{ 0x020, 0x0, 0x0, "UART_MDR1_REG" 	},
	{ 0x024, 0x0, 0x0, "UART_MDR2_REG" 	},
	{ 0x028, 0x0, 0x0, "UART_SFLSR_REG" 	},
	{ 0x028, 0x0, 0x0, "UART_TXFLL_REG" 	},
	{ 0x02C, 0x0, 0x0, "UART_RESUME_REG" 	},
	{ 0x02C, 0x0, 0x0, "UART_TXFLH_REG" 	},
	{ 0x030, 0x0, 0x0, "UART_SFREGL_REG" 	},
	{ 0x030, 0x0, 0x0, "UART_RXFLL_REG" 	},
	{ 0x034, 0x0, 0x0, "UART_SFREGH_REG" 	},
	{ 0x034, 0x0, 0x0, "UART_RXFLH_REG" 	},
	{ 0x038, 0x0, 0x0, "UART_UASR_REG" 	},
	{ 0x038, 0x0, 0x0, "UART_BLR_REG" 	},
	{ 0x03C, 0x0, 0x0, "UART_ACREG_REG" 	},
	{ 0x040, 0x0, 0x0, "UART_SCR_REG" 	},
	{ 0x044, 0x0, 0x0, "UART_SSR_REG" 	},
	{ 0x048, 0x0, 0x0, "UART_EBLR_REG" 	},
	{ 0x050, 0x0, 0x0, "UART_MVR_REG" 	},
	{ 0x054, 0x0, 0x0, "UART_SYSC_REG" 	},
	{ 0x058, 0x0, 0x0, "UART_SYSS_REG" 	},
	{ 0x05C, 0x0, 0x0, "UART_WER_REG" 	},
	{ 0x060, 0x0, 0x0, "UART_CFPS_REG" 	}	
};

/* base addresses 
MMCHS1   0x4809C000 
MMCHS2   0x480B4000  
MMCHS3   0x480AD000
*/
static struct reg_info omap35x_mmchs_registers[] = {
	{ 0x010, 0x0, 0x0, "MMCHS_SYSCONFIG" 	},
	{ 0x014, 0x0, 0x0, "MMCHS_SYSSTATUS" 	},
	{ 0x024, 0x0, 0x0, "MMCHS_CSRE" 	},
	{ 0x028, 0x0, 0x0, "MMCHS_SYSTEST" 	},
	{ 0x02C, 0x0, 0x0, "MMCHS_CON" 		},
	{ 0x030, 0x0, 0x0, "MMCHS_PWCNT" 	},
	{ 0x104, 0x0, 0x0, "MMCHS_BLK" 		},
	{ 0x108, 0x0, 0x0, "MMCHS_ARG" 		},
	{ 0x10C, 0x0, 0x0, "MMCHS_CMD" 		},
	{ 0x110, 0x0, 0x0, "MMCHS_RSP10" 	},
	{ 0x114, 0x0, 0x0, "MMCHS_RSP32" 	},
	{ 0x118, 0x0, 0x0, "MMCHS_RSP54" 	},
	{ 0x11C, 0x0, 0x0, "MMCHS_RSP76" 	},
	{ 0x120, 0x0, 0x0, "MMCHS_DATA" 	},
	{ 0x124, 0x0, 0x0, "MMCHS_PSTATE" 	},
	{ 0x128, 0x0, 0x0, "MMCHS_HCTL" 	},
	{ 0x12C, 0x0, 0x0, "MMCHS_SYSCTL" 	},
	{ 0x130, 0x0, 0x0, "MMCHS_STAT" 	},
	{ 0x134, 0x0, 0x0, "MMCHS_IE" 		},
	{ 0x138, 0x0, 0x0, "MMCHS_ISE" 		},
	{ 0x13C, 0x0, 0x0, "MMCHS_AC12" 	},
	{ 0x140, 0x0, 0x0, "MMCHS_CAPA" 	},
	{ 0x148, 0x0, 0x0, "MMCHS_CUR_CAPA" 	},
	{ 0x150, 0x0, 0x0, "MMCHS_REV" 		}
};

/* base addresses 
MCSPI1   0x48098000 
MCSPI2   0x4809A000 
MCSPI3   0x480B8000 
MCSPI4   0x480BA000
*/
static struct reg_info omap35x_mcspi_registers[] = {
	{ 0x00, 0x0, 0x0, "MCSPI_REVISION" 	},
	{ 0x10, 0x0, 0x0, "MCSPI_SYSCONFIG" 	},
	{ 0x14, 0x0, 0x0, "MCSPI_SYSSTATUS" 	},
	{ 0x18, 0x0, 0x0, "MCSPI_IRQSTATUS" 	},
	{ 0x1C, 0x0, 0x0, "MCSPI_IRQENABLE" 	},
	{ 0x20, 0x0, 0x0, "MCSPI_WAKEUPENABLE" 	},
	{ 0x24, 0x0, 0x0, "MCSPI_SYST" 		},
	{ 0x28, 0x0, 0x0, "MCSPI_MODULCTRL" 	},
	{ 0x2C, 0x0, 0x0, "MCSPI_CH0CONF" 	},
	{ 0x30, 0x0, 0x0, "MCSPI_CH0STAT" 	},
	{ 0x34, 0x0, 0x0, "MCSPI_CH0CTRL" 	},
	{ 0x38, 0x0, 0x0, "MCSPI_TX0" 		},
	{ 0x3C, 0x0, 0x0, "MCSPI_RX0" 		},
	{ 0x7C, 0x0, 0x0, "MCSPI_XFERLEVEL" 	}
};

/* base addresses
McBSP1         	  0x48074000 
McBSP5 		  0x48096000 
McBSP2 		  0x49022000 
McBSP3 		  0x49024000 
McBSP4 		  0x49026000 
SIDETONE_McBSP2   0x49028000 
SIDETONE_McBSP3   0x4902A000
*/
static struct reg_info omap35x_mcbsp_registers[] = {
	{ 0x000, 0x0, 0x0, "MCBSPLP_DRR_REG" 		},
	{ 0x004, 0x0, 0x0, "MCBSPLP_DXR_REG" 		},
	{ 0x010, 0x0, 0x0, "MCBSPLP_SPCR2_REG" 		},
	{ 0x014, 0x0, 0x0, "MCBSPLP_SPCR1_REG" 		},
	{ 0x018, 0x0, 0x0, "MCBSPLP_RCR2_REG" 		},
	{ 0x01C, 0x0, 0x0, "MCBSPLP_RCR1_REG" 		},
	{ 0x020, 0x0, 0x0, "MCBSPLP_XCR2_REG" 		},
	{ 0x024, 0x0, 0x0, "MCBSPLP_XCR1_REG" 		},
	{ 0x028, 0x0, 0x0, "MCBSPLP_SRGR2_REG" 		},
	{ 0x02C, 0x0, 0x0, "MCBSPLP_SRGR1_REG" 		},
	{ 0x030, 0x0, 0x0, "MCBSPLP_MCR2_REG" 		},
	{ 0x034, 0x0, 0x0, "MCBSPLP_MCR1_REG" 		},
	{ 0x038, 0x0, 0x0, "MCBSPLP_RCERA_REG" 		},
	{ 0x03C, 0x0, 0x0, "MCBSPLP_RCERB_REG" 		},
	{ 0x040, 0x0, 0x0, "MCBSPLP_XCERA_REG" 		},
	{ 0x044, 0x0, 0x0, "MCBSPLP_XCERB_REG" 		},
	{ 0x048, 0x0, 0x0, "MCBSPLP_PCR_REG" 		},
	{ 0x04C, 0x0, 0x0, "MCBSPLP_RCERC_REG" 		},
	{ 0x050, 0x0, 0x0, "MCBSPLP_RCERD_REG" 		},
	{ 0x054, 0x0, 0x0, "MCBSPLP_XCERC_REG" 		},
	{ 0x058, 0x0, 0x0, "MCBSPLP_XCERD_REG" 		},
	{ 0x05C, 0x0, 0x0, "MCBSPLP_RCERE_REG" 		},
	{ 0x060, 0x0, 0x0, "MCBSPLP_RCERF_REG" 		},
	{ 0x064, 0x0, 0x0, "MCBSPLP_XCERE_REG" 		},
	{ 0x068, 0x0, 0x0, "MCBSPLP_XCERF_REG" 		},
	{ 0x06C, 0x0, 0x0, "MCBSPLP_RCERG_REG" 		},
	{ 0x070, 0x0, 0x0, "MCBSPLP_RCERH_REG" 		},
	{ 0x074, 0x0, 0x0, "MCBSPLP_XCERG_REG" 		},
	{ 0x078, 0x0, 0x0, "MCBSPLP_XCERH_REG" 		},
	{ 0x07C, 0x0, 0x0, "MCBSPLP_REV_REG" 		},
	{ 0x080, 0x0, 0x0, "MCBSPLP_RINTCLR_REG" 	},
	{ 0x084, 0x0, 0x0, "MCBSPLP_XINTCLR_REG" 	},
	{ 0x088, 0x0, 0x0, "MCBSPLP_ROVFLCLR_REG" 	},
	{ 0x08C, 0x0, 0x0, "MCBSPLP_SYSCONFIG_REG" 	},
	{ 0x090, 0x0, 0x0, "MCBSPLP_THRSH2_REG" 	},
	{ 0x094, 0x0, 0x0, "MCBSPLP_THRSH1_REG" 	},
	{ 0x0A0, 0x0, 0x0, "MCBSPLP_IRQSTATUS_REG" 	},
	{ 0x0A4, 0x0, 0x0, "MCBSPLP_IRQENABLE_REG" 	},
	{ 0x0A8, 0x0, 0x0, "MCBSPLP_WAKEUPEN_REG" 	},
	{ 0x0AC, 0x0, 0x0, "MCBSPLP_XCCR_REG" 		},
	{ 0x0B0, 0x0, 0x0, "MCBSPLP_RCCR_REG" 		},
	{ 0x0B4, 0x0, 0x0, "MCBSPLP_XBUFSTAT_REG" 	},
	{ 0x0B8, 0x0, 0x0, "MCBSPLP_RBUFSTAT_REG" 	},
	{ 0x0BC, 0x0, 0x0, "MCBSPLP_SSELCR_REG" 	},
	{ 0x0C0, 0x0, 0x0, "MCBSPLP_STATUS_REG" 	}
};

/* base addresses
WDTIMER2   0x48314000 
WDTIMER3   0x49030000
*/
static struct reg_info omap35x_wdt_registers[] = {
	{ 0x000, 0x0, 0x0, "WDT_WIDR" 		},
	{ 0x010, 0x0, 0x0, "WDT_SYSCONFIG" 	},
	{ 0x014, 0x0, 0x0, "WDT_SYSSTATUS" 	},
	{ 0x018, 0x0, 0x0, "WDT_WISR" 		},
	{ 0x01C, 0x0, 0x0, "WDT_WIER" 		},
	{ 0x024, 0x0, 0x0, "WDT_WCLR" 		},
	{ 0x028, 0x0, 0x0, "WDT_WCRR" 		},
	{ 0x02C, 0x0, 0x0, "WDT_WLDR" 		},
	{ 0x030, 0x0, 0x0, "WDT_WTGR" 		},
	{ 0x034, 0x0, 0x0, "WDT_WWPS" 		},
	{ 0x048, 0x0, 0x0, "WDT_WSPR" 		}
};

/* base addresses
GPTIMER1   0x48318000 
GPTIMER2   0x49032000 
GPTIMER3   0x49034000 
GPTIMER4   0x49036000 
GPTIMER5   0x49038000 
GPTIMER6   0x4903A000 
GPTIMER7   0x4903C000 
GPTIMER8   0x4903E000 
GPTIMER9   0x49040000
GPTIMER10  0x48086000 
GPTIMER11  0x48088000
*/
static struct reg_info omap35x_gpt_registers[] = {
	{ 0x000, 0x0, 0x0, "GPT_TIDR" 		},
	{ 0x010, 0x0, 0x0, "GPT_1MS_TIOCP_CFG" 	},
	{ 0x014, 0x0, 0x0, "GPT_TISTAT" 	},
	{ 0x018, 0x0, 0x0, "GPT_TISR" 		},
	{ 0x01C, 0x0, 0x0, "GPT_TIER" 		},
	{ 0x020, 0x0, 0x0, "GPT_TWER" 		},
	{ 0x024, 0x0, 0x0, "GPT_TCLR" 		},
	{ 0x028, 0x0, 0x0, "GPT_TCRR" 		},
	{ 0x02C, 0x0, 0x0, "GPT_TLDR" 		},
	{ 0x030, 0x0, 0x0, "GPT_TTGR" 		},
	{ 0x034, 0x0, 0x0, "GPT_TWPS" 		},
	{ 0x038, 0x0, 0x0, "GPT_TMAR" 		},
	{ 0x03C, 0x0, 0x0, "GPT_TCAR1" 		},
	{ 0x040, 0x0, 0x0, "GPT_TSICR" 		},
	{ 0x044, 0x0, 0x0, "GPT_TCAR2" 		},
	{ 0x048, 0x0, 0x0, "GPT_TPIR" 		},
	{ 0x04C, 0x0, 0x0, "GPT_TNIR" 		},
	{ 0x050, 0x0, 0x0, "GPT_TCVR" 		},
	{ 0x054, 0x0, 0x0, "GPT_TCVR" 		},
	{ 0x058, 0x0, 0x0, "GPT_TCVR" 		}
};

// base address USBTLL   0x48062000
static struct reg_info omap35x_usbttlhs_config_registers[] = {
	{ 0x000, 0x0, 0x0, "USBTTL_REVISION"	},
	{ 0x010, 0x0, 0x0, "USBTTL_SYSCONFIG" 	},
	{ 0x014, 0x0, 0x0, "USBTTL_SYSSTATUS" 	},
	{ 0x018, 0x0, 0x0, "USBTTL_IRQSTATUS" 	},
	{ 0x11C, 0x0, 0x0, "USBTTL_IRQENABLE" 	},
	{ 0x030, 0x0, 0x0, "TTL_SHARED_CONF" 	}	
};

// base address Device_Id   0x4830A204 
static struct reg_info omap35x_product_id_registers[] = {
	{ 0x000, 0x0, 0x0, "CONTROL.CONTROL_IDCODE[31:0]" }
};

#endif 		// _OMAP35x_


/* For Processor identification */
// 0x4A002000
static struct reg_info omap44x_processor_id[] = {
	{ 0x204, 0x0, 0x0, "ID_CODE" }
};

// 0x44E10600
static struct reg_info am335x_processor_id[] = {
	{ 0x04, 0x0, 0x0, "DEVICE_FEATURE" }
};

// 0x48002400
static struct reg_info omap35x_processor_id[] = {
	{ 0x4C, 0x0, 0x0, "CHIP_ID" }
};


/*
 * Reads the register contents from the memory
 * Input:
 *	struct reg_info rinfo[] -	structure having the register offset, name ,etc.
 *	int num_regs		-	number of registers contained in the structure
 *	unsigned long base	-	base address for the memory location to be read
 *
 * Output:
 *	Register values are shown
 */
void show_registers(struct reg_info rinfo[],int num_regs, unsigned long base) {
	int fd, i=0;
	void *map_base, *virt_addr;
	unsigned long read_result;
	off_t target;
//	unsigned long len, mask;

	printf("Base %lx\n",base);
//	printf("%s Registers\n",reg_type);
//	num_regs = ARRAY_SIZE(struct reg_info, rinfo);
	printf("No of registers: %d\n", num_regs);

	target = base;

	if((fd = open("/dev/mem", O_RDWR | O_SYNC)) == -1) FATAL;
	printf("/dev/mem opened.\n");

/*	if(num_regs == 1) {
		len = 8;
		mask = 7;
	}

	else {
		len = MAP_SIZE;
		mask = MAP_MASK;
	} */

	/* Map one page */
	map_base = mmap(0, MAP_SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, fd, target & ~MAP_MASK);

//	map_base = mmap(0, len, PROT_READ | PROT_WRITE, MAP_SHARED, fd, target & ~mask);
//
	if(map_base == (void *) -1) FATAL;
	printf("Memory mapped at address %p.\n", map_base); 

	for(i=0; i < num_regs; i++) {
		target = rinfo[i].offset;
		virt_addr = map_base + (target & MAP_MASK);

	read_result = *((unsigned long *) virt_addr);
	rinfo[i].old_value = read_result;
//		printf("Reg Name: %s & Value at address 0x%X (%p): 0x%X\n",rinfo[i].name, target, 							virt_addr, read_result);

	printf("REGISTER NAME: %s \t\tValue at address 0x%lX \t offset 0x%lX \t (%p) \t: 0x%lX\n",rinfo[i].name,target,rinfo[i].offset ,virt_addr, read_result);
	}

	if(munmap(map_base, MAP_SIZE) == -1) FATAL;
	close(fd);
}


/* Reads the /proc/cpuinfo and finds out which processor we are working on
 * Input:
 *	No input required
 * 
 * Output:
 *	int --> one of the #defines for the processor types
 */
int read_processor() {
	FILE *fp = fopen(CPUINFO_FILE,"r");
	char field[30];

	if(fp == NULL) {
		fprintf(stderr,"Cannot open the cpuinfo file for reading\n");
		exit(1);
	}

	while(fscanf(fp,"%s",field) != EOF) {
		if(strcmp(field,"Hardware") == 0) {
//			printf("%s",field);

			// seek past three characters to get the "Hardware" field's value
			fseek(fp,3,SEEK_CUR);
			fgets(field,sizeof(field),fp);
			printf("%s",field);

			// OMAP4 one
			if(strstr(field,"OMAP4") != NULL) {
				printf("OMAP4 Processor\n");

				show_registers(omap44x_processor_id,1,0x4A002000);
				unsigned long id_value = omap44x_processor_id[0].old_value << 4;
				printf("id_value :: %lX\n",id_value);
				printf("omap44x_processor_id[0].old_value :: %lX\n",omap44x_processor_id[0].old_value);

				if(id_value == OMAP4430_HAWKEYE_NUM1 || id_value == OMAP4430_HAWKEYE_NUM2) {
					printf("It is OMAP4430\n");
				}

				else if(id_value == OMAP4460_RAMP_SYSTEM) {
					printf("It is OMAP4460\n");
				}

				else if(id_value == OMAP4470_RAMP_SYSTEM) {
					printf("It is OMAP4470\n");
				}

				else {
					printf("It does not belong to OMAP44x Family\n");
				}

				fclose(fp);
				return OMAP4;
			}

			// AM335x series one
			else if(strstr(field,"am335") != NULL) {
				printf("AM335x Processor\n");

				show_registers(am335x_processor_id,1,0x44E10600);
				printf("am335x_processor_id[0].old_value :: %lX\n",am335x_processor_id[0].old_value);

				if( am335x_processor_id[0].old_value == AM3352_DEVICE_ID ) {
					printf("It is AM3352\n");
				}

				else if( am335x_processor_id[0].old_value == AM3354_DEVICE_ID ){
					printf("It is AM3354\n");
				}

				else if( am335x_processor_id[0].old_value == AM3356_DEVICE_ID ){
					printf("It is AM3356\n");
				}

				else if( am335x_processor_id[0].old_value == AM3357_DEVICE_ID ){
					printf("It is AM3357\n");
				}

				else if( am335x_processor_id[0].old_value == AM3358_DEVICE_ID ){
					printf("It is AM3358\n");
				}

				else if( am335x_processor_id[0].old_value == AM3359_DEVICE_ID ){
					printf("It is AM3359\n");
				}

				else {
					printf("It does not belong to AM335x Family\n");
				}

				fclose(fp);
				return AM335x;
			}

			// OMAP35x series one
			else if(strstr(field,"OMAP35") != NULL) {
				printf("OMAP35x Processor\n");

				show_registers(omap35x_processor_id,1,0x48002400);
				printf("omap35x_processor_id[0].old_value :: %lX\n",omap35x_processor_id[0].old_value);

				if(omap35x_processor_id[0].old_value == OMAP3530_CHIP_ID ) {
					printf("It is OMAP3530\n");
				}

				else if(omap35x_processor_id[0].old_value == OMAP3525_CHIP_ID) {
					printf("It is OMAP3525\n");
				}

				else if(omap35x_processor_id[0].old_value == OMAP3515_CHIP_ID) {
					printf("It is OMAP3515\n");
				}

				else if(omap35x_processor_id[0].old_value == OMAP3503_CHIP_ID) {
					printf("It is OMAP3503\n");
				}

				else {
					printf("It does not belong to OMAP35x Family\n");
				}

				fclose(fp);
				return OMAP35x;
			}

			break;
		}

//		printf("%s",field);
		fgets(field,sizeof(field),fp);
	}

	// not able to recognize the processor
	fclose(fp);
	return -1;
}


#endif
